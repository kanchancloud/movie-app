(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[72942],{139460:function(n,e,a){"use strict";a.r(e),a.d(e,{default:function(){return In}});var t,o,i,s,r,l=a(827378),c=a(494616),d=a(295649),p=a(290763),m=a(375205),u=a(709497),h=a(197704),g=a(824246),x=(0,p.ZP)(u.Z)((function(n){var e=n.theme;return(0,d.Z)((0,d.Z)({backgroundColor:"dark"===e.palette.mode?"#1A2027":"#fff"},e.typography.body2),{},{padding:e.spacing(1),textAlign:"center",color:e.palette.text.secondary})}));var f=(0,p.ZP)(u.Z)((function(n){var e=n.theme;return(0,d.Z)((0,d.Z)({backgroundColor:"dark"===e.palette.mode?"#1A2027":"#fff"},e.typography.body2),{},{padding:e.spacing(1),textAlign:"center",color:e.palette.text.secondary})}));var b,y,k,v=a(25778),G=a(165262),w=a(828996),j=a(394898),C=a(85275),I=a(503170),S=a(823168);var P=(0,p.ZP)(u.Z)((function(n){var e=n.theme;return(0,d.Z)((0,d.Z)({backgroundColor:"dark"===e.palette.mode?"#1A2027":"#fff"},e.typography.body2),{},{padding:e.spacing(1),textAlign:"center",color:e.palette.text.secondary})}));var Z,R,A=a(675453),B=a.n(A),F=(0,p.ZP)(u.Z)((function(n){var e=n.theme;return(0,d.Z)((0,d.Z)({backgroundColor:"dark"===e.palette.mode?"#1A2027":"#fff"},e.typography.body2),{},{padding:e.spacing(2),textAlign:"center",color:e.palette.text.secondary})}));var T,L=(0,p.ZP)(u.Z)((function(n){var e=n.theme;return(0,d.Z)((0,d.Z)({backgroundColor:"dark"===e.palette.mode?"#1A2027":"#fff"},e.typography.body2),{},{padding:e.spacing(1),textAlign:"center",color:e.palette.text.secondary})}));var q,z,W,M,D,H,N,_,E,V,$,O,Y,J,U,X,Q,K,nn=(0,p.ZP)(u.Z)((function(n){var e=n.theme;return(0,d.Z)((0,d.Z)({backgroundColor:"dark"===e.palette.mode?"#1A2027":"#fff"},e.typography.body2),{},{padding:e.spacing(1),textAlign:"center",color:e.palette.text.secondary})}));var en,an,tn,on,sn,rn=a(376811),ln=a(161980),cn=(0,p.ZP)("img")({margin:"auto",display:"block",maxWidth:"100%",maxHeight:"100%"});var dn,pn=(0,p.ZP)(u.Z)((function(n){var e=n.theme;return(0,d.Z)((0,d.Z)({backgroundColor:"dark"===e.palette.mode?"#1A2027":"#fff"},e.typography.body2),{},{padding:e.spacing(1),textAlign:"center",color:e.palette.text.secondary})}));function mn(){return on||(on=(0,g.jsxs)(l.Fragment,{children:[(0,g.jsx)(h.ZP,{item:!0,xs:4,children:(0,g.jsx)(pn,{children:"Item"})}),(0,g.jsx)(h.ZP,{item:!0,xs:4,children:(0,g.jsx)(pn,{children:"Item"})}),(0,g.jsx)(h.ZP,{item:!0,xs:4,children:(0,g.jsx)(pn,{children:"Item"})})]}))}var un=(0,p.ZP)(u.Z)((function(n){var e=n.theme;return(0,d.Z)((0,d.Z)({backgroundColor:"dark"===e.palette.mode?"#1A2027":"#fff"},e.typography.body2),{},{padding:e.spacing(1),textAlign:"center",color:e.palette.text.secondary})}));var hn,gn,xn,fn,bn=a(348253),yn=(0,p.ZP)(u.Z)((function(n){var e=n.theme;return(0,d.Z)((0,d.Z)({backgroundColor:"dark"===e.palette.mode?"#1A2027":"#fff"},e.typography.body2),{},{padding:e.spacing(2),maxWidth:400,color:e.palette.text.primary})})),kn="Truncation should be conditionally applicable on this long line of text\n as this is a much longer line than what the container can support. ";var vn=(0,p.ZP)(u.Z)((function(n){var e=n.theme;return(0,d.Z)((0,d.Z)({backgroundColor:"dark"===e.palette.mode?"#1A2027":"#fff"},e.typography.body2),{},{padding:e.spacing(1),textAlign:"center",color:e.palette.text.secondary})}));var Gn,wn={en:{description:"The Material Design responsive layout grid adapts to screen size and orientation, ensuring consistency across layouts.",location:"/docs/data/material/components/grid/grid.md",rendered:['<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n  <symbol id="anchor-link-icon" viewBox="0 0 16 16">\n    <path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" />\n  </symbol>\n</svg>','<h1>Grid</h1><p class="description">The Material Design responsive layout grid adapts to screen size and orientation, ensuring consistency across layouts.</p>\n\n<p>The <a href="https://material.io/design/layout/responsive-layout-grid.html" target="_blank" rel="noopener nofollow">grid</a> creates visual consistency between layouts while allowing flexibility across a wide variety of designs.\nMaterial Design&#39;s responsive UI is based on a 12-column grid layout.</p>\n',{component:"modules/components/ComponentLinkHeader.js",design:!1},'<blockquote>\n<p>\u26a0\ufe0f The <code>Grid</code> component shouldn&#39;t be confused with a data grid; it is closer to a layout grid. For a data grid head to <a href="/x/react-data-grid/">the <code>DataGrid</code> component</a>.</p>\n</blockquote>\n<h2 id="heading-how-it-works"><span class="anchor-link" id="how-it-works"></span>How it works<a aria-labelledby="heading-how-it-works" class="anchor-link-style" href="#how-it-works" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>The grid system is implemented with the <code>Grid</code> component:</p>\n<ul>\n<li>It uses <a href="https://www.w3.org/TR/css-flexbox-1/" target="_blank" rel="noopener nofollow">CSS&#39;s Flexible Box module</a> for high flexibility.</li>\n<li>There are two types of layout: <em>containers</em> and <em>items</em>.</li>\n<li>Item widths are set in percentages, so they&#39;re always fluid and sized relative to their parent element.</li>\n<li>Items have padding to create the spacing between individual items.</li>\n<li>There are five grid breakpoints: xs, sm, md, lg, and xl.</li>\n<li>Integer values can be given to each breakpoint, indicating how many of the 12 available columns are occupied by the component when the viewport width satisfies the <a href="/material-ui/customization/breakpoints/#default-breakpoints">breakpoint constraints</a>.</li>\n</ul>\n<p>If you are <strong>new to or unfamiliar with flexbox</strong>, we encourage you to read this <a href="https://css-tricks.com/snippets/css/a-guide-to-flexbox/">CSS-Tricks flexbox</a> guide.</p>\n<h2 id="heading-fluid-grids"><span class="anchor-link" id="fluid-grids"></span>Fluid grids<a aria-labelledby="heading-fluid-grids" class="anchor-link-style" href="#fluid-grids" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>Fluid grids use columns that scale and resize content. A fluid grid&#39;s layout can use breakpoints to determine if the layout needs to change dramatically.</p>\n<h3 id="heading-basic-grid"><span class="anchor-link" id="basic-grid"></span>Basic grid<a aria-labelledby="heading-basic-grid" class="anchor-link-style" href="#basic-grid" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>Column widths are integer values between 1 and 12; they apply at any breakpoint and indicate how many columns are occupied by the component.</p>\n<p>A value given to a breakpoint applies to all the other breakpoints wider than it (unless overridden, as you can read later in this page). For example, <code>xs={12}</code> sizes a component to occupy the whole viewport width regardless of its size.</p>\n',{demo:"BasicGrid.js",bg:!0},'<h3 id="heading-grid-with-multiple-breakpoints"><span class="anchor-link" id="grid-with-multiple-breakpoints"></span>Grid with multiple breakpoints<a aria-labelledby="heading-grid-with-multiple-breakpoints" class="anchor-link-style" href="#grid-with-multiple-breakpoints" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>Components may have multiple widths defined, causing the layout to change at the defined breakpoint. Width values given to larger breakpoints override those given to smaller breakpoints.</p>\n<p>For example, <code>xs={12} sm={6}</code> sizes a component to occupy half of the viewport width (6 columns) when viewport width is <a href="/material-ui/customization/breakpoints/#default-breakpoints">600 or more pixels</a>. For smaller viewports, the component fills all 12 available columns.</p>\n',{demo:"FullWidthGrid.js",bg:!0},'<h2 id="heading-spacing"><span class="anchor-link" id="spacing"></span>Spacing<a aria-labelledby="heading-spacing" class="anchor-link-style" href="#spacing" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>To control space between children, use the <code>spacing</code> prop.\nThe spacing value can be any positive number, including decimals and any string.\nThe prop is converted into a CSS property using the <a href="/material-ui/customization/spacing/"><code>theme.spacing()</code></a> helper.</p>\n',{demo:"SpacingGrid.js",bg:!0},'<h3 id="heading-row-amp-column-spacing"><span class="anchor-link" id="row-amp-column-spacing"></span>Row &amp; column spacing<a aria-labelledby="heading-row-amp-column-spacing" class="anchor-link-style" href="#row-amp-column-spacing" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The <code>rowSpacing</code> and <code>columnSpacing</code> props allow for specifying the row and column gaps independently.\nIt&#39;s similar to the <code>row-gap</code> and <code>column-gap</code> properties of <a href="/system/grid/#row-gap-amp-column-gap">CSS Grid</a>.</p>\n',{demo:"RowAndColumnSpacing.js",bg:!0},'<h2 id="heading-responsive-values"><span class="anchor-link" id="responsive-values"></span>Responsive values<a aria-labelledby="heading-responsive-values" class="anchor-link-style" href="#responsive-values" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>You can switch the props&#39; value based on the active breakpoint.\nFor instance, we can implement the <a href="https://material.io/design/layout/responsive-layout-grid.html" target="_blank" rel="noopener nofollow">&quot;recommended&quot;</a> responsive layout grid of Material Design.</p>\n',{demo:"ResponsiveGrid.js",bg:!0},'<p>Responsive values is supported by:</p>\n<ul>\n<li><code>columns</code></li>\n<li><code>columnSpacing</code></li>\n<li><code>direction</code></li>\n<li><code>rowSpacing</code></li>\n<li><code>spacing</code></li>\n<li>all the <a href="#system-props">other props</a> of the system</li>\n</ul>\n<blockquote>\n<p>\u26a0\ufe0f When using a responsive <code>columns</code> prop, each grid item needs its corresponding breakpoint.\nFor instance, this is not working. The grid item misses the value for <code>md</code>:</p>\n<pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Grid</span></span> <span class="token attr-name">container</span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token literal-property property">xs</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token literal-property property">md</span><span class="token operator">:</span> <span class="token number">12</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Grid</span></span> <span class="token attr-name">item</span> <span class="token attr-name">xs</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Grid</span></span><span class="token punctuation">></span></span>\n</code></pre>\n</blockquote>\n<h2 id="heading-interactive"><span class="anchor-link" id="interactive"></span>Interactive<a aria-labelledby="heading-interactive" class="anchor-link-style" href="#interactive" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>Below is an interactive demo that lets you explore the visual results of the different settings:</p>\n',{demo:"InteractiveGrid.js",hideToolbar:!0,bg:!0},'<h2 id="heading-auto-layout"><span class="anchor-link" id="auto-layout"></span>Auto-layout<a aria-labelledby="heading-auto-layout" class="anchor-link-style" href="#auto-layout" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>The Auto-layout makes the <em>items</em> equitably share the available space.\nThat also means you can set the width of one <em>item</em> and the others will automatically resize around it.</p>\n',{demo:"AutoGrid.js",bg:!0},'<h3 id="heading-variable-width-content"><span class="anchor-link" id="variable-width-content"></span>Variable width content<a aria-labelledby="heading-variable-width-content" class="anchor-link-style" href="#variable-width-content" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>Set one of the size breakpoint props to <code>&quot;auto&quot;</code> instead of <code>true</code> / a <code>number</code> to size\na column based on the natural width of its content.</p>\n',{demo:"VariableWidthGrid.js",bg:!0},'<h2 id="heading-complex-grid"><span class="anchor-link" id="complex-grid"></span>Complex Grid<a aria-labelledby="heading-complex-grid" class="anchor-link-style" href="#complex-grid" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>The following demo doesn&#39;t follow the Material Design guidelines, but illustrates how the grid can be used to build complex layouts.</p>\n',{demo:"ComplexGrid.js",bg:!0},'<h2 id="heading-nested-grid"><span class="anchor-link" id="nested-grid"></span>Nested Grid<a aria-labelledby="heading-nested-grid" class="anchor-link-style" href="#nested-grid" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>The <code>container</code> and <code>item</code> props are two independent booleans; they can be combined to allow a Grid component to be both a flex container and child.</p>\n<blockquote>\n<p>A flex <strong>container</strong> is the box generated by an element with a computed display of <code>flex</code> or <code>inline-flex</code>. In-flow children of a flex container are called flex <strong>items</strong> and are laid out using the flex layout model.</p>\n</blockquote>\n<p><a href="https://www.w3.org/TR/css-flexbox-1/#box-model" target="_blank" rel="noopener nofollow">https://www.w3.org/TR/css-flexbox-1/#box-model</a></p>\n',{demo:"NestedGrid.js",bg:!0},'<p>\u26a0\ufe0f Defining an explicit width to a Grid element that is flex container, flex item, and has spacing at the same time lead to unexpected behavior, avoid doing it:</p>\n<pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Grid</span></span> <span class="token attr-name">spacing</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">}</span></span> <span class="token attr-name">container</span> <span class="token attr-name">item</span> <span class="token attr-name">xs</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">12</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n</code></pre>\n<p>If you need to do such, remove one of the props.</p>\n<h2 id="heading-columns"><span class="anchor-link" id="columns"></span>Columns<a aria-labelledby="heading-columns" class="anchor-link-style" href="#columns" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>You can change the default number of columns (12) with the <code>columns</code> prop.</p>\n',{demo:"ColumnsGrid.js",bg:!0},'<h2 id="heading-limitations"><span class="anchor-link" id="limitations"></span>Limitations<a aria-labelledby="heading-limitations" class="anchor-link-style" href="#limitations" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><h3 id="heading-negative-margin"><span class="anchor-link" id="negative-margin"></span>Negative margin<a aria-labelledby="heading-negative-margin" class="anchor-link-style" href="#negative-margin" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The spacing between items is implemented with a negative margin. This might lead to unexpected behaviors. For instance, to apply a background color, you need to apply <code>display: flex;</code> to the parent.</p>\n<h3 id="heading-white-space-nowrap"><span class="anchor-link" id="white-space-nowrap"></span>white-space: nowrap<a aria-labelledby="heading-white-space-nowrap" class="anchor-link-style" href="#white-space-nowrap" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The initial setting on flex items is <code>min-width: auto</code>.\nIt&#39;s causing a positioning conflict when the children is using <code>white-space: nowrap;</code>.\nYou can experience the issue with:</p>\n<pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Grid</span></span> <span class="token attr-name">item</span> <span class="token attr-name">xs</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Typography</span></span> <span class="token attr-name">noWrap</span><span class="token punctuation">></span></span>\n</code></pre>\n<p>In order for the item to stay within the container you need to set <code>min-width: 0</code>.\nIn practice, you can set the <code>zeroMinWidth</code> prop:</p>\n<pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Grid</span></span> <span class="token attr-name">item</span> <span class="token attr-name">xs</span> <span class="token attr-name">zeroMinWidth</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Typography</span></span> <span class="token attr-name">noWrap</span><span class="token punctuation">></span></span>\n</code></pre>\n',{demo:"AutoGridNoWrap.js",bg:!0},'<h3 id="heading-direction-column-column-reverse"><span class="anchor-link" id="direction-column-column-reverse"></span>direction: column | column-reverse<a aria-labelledby="heading-direction-column-column-reverse" class="anchor-link-style" href="#direction-column-column-reverse" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The <code>xs</code>, <code>sm</code>, <code>md</code>, <code>lg</code>, and <code>xl</code> props are <strong>not supported</strong> within <code>direction=&quot;column&quot;</code> and <code>direction=&quot;column-reverse&quot;</code> containers.</p>\n<p>They define the number of grids the component will use for a given breakpoint. They are intended to control <strong>width</strong> using <code>flex-basis</code> in <code>row</code> containers but they will impact height in <code>column</code> containers.\nIf used, these props may have undesirable effects on the height of the <code>Grid</code> item elements.</p>\n<h2 id="heading-css-grid-layout"><span class="anchor-link" id="css-grid-layout"></span>CSS Grid Layout<a aria-labelledby="heading-css-grid-layout" class="anchor-link-style" href="#css-grid-layout" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>The <code>Grid</code> component is using CSS flexbox internally.\nBut as seen below, you can easily use <a href="/system/grid/">the system</a> and CSS Grid to layout your pages.</p>\n',{demo:"CSSGrid.js",bg:!0},'<h2 id="heading-system-props"><span class="anchor-link" id="system-props"></span>System props<a aria-labelledby="heading-system-props" class="anchor-link-style" href="#system-props" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>As a CSS utility component, the <code>Grid</code> supports all <a href="/system/properties/"><code>system</code></a> properties. You can use them as props directly on the component.\nFor instance, a padding:</p>\n<pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Grid</span></span> <span class="token attr-name">item</span> <span class="token attr-name">p</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n</code></pre>\n','<h2 id="heading-api"><span class="anchor-link" id="api"></span>API<a aria-labelledby="heading-api" class="anchor-link-style" href="#api" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><ul>\n<li><a href="/material-ui/api/grid/"><code>&lt;Grid /&gt;</code></a></li>\n</ul>\n'],toc:[{text:"How it works",level:2,hash:"how-it-works",children:[]},{text:"Fluid grids",level:2,hash:"fluid-grids",children:[{text:"Basic grid",level:3,hash:"basic-grid"},{text:"Grid with multiple breakpoints",level:3,hash:"grid-with-multiple-breakpoints"}]},{text:"Spacing",level:2,hash:"spacing",children:[{text:"Row &amp; column spacing",level:3,hash:"row-amp-column-spacing"}]},{text:"Responsive values",level:2,hash:"responsive-values",children:[]},{text:"Interactive",level:2,hash:"interactive",children:[]},{text:"Auto-layout",level:2,hash:"auto-layout",children:[{text:"Variable width content",level:3,hash:"variable-width-content"}]},{text:"Complex Grid",level:2,hash:"complex-grid",children:[]},{text:"Nested Grid",level:2,hash:"nested-grid",children:[]},{text:"Columns",level:2,hash:"columns",children:[]},{text:"Limitations",level:2,hash:"limitations",children:[{text:"Negative margin",level:3,hash:"negative-margin"},{text:"white-space: nowrap",level:3,hash:"white-space-nowrap"},{text:"direction: column | column-reverse",level:3,hash:"direction-column-column-reverse"}]},{text:"CSS Grid Layout",level:2,hash:"css-grid-layout",children:[]},{text:"System props",level:2,hash:"system-props",children:[]},{text:"API",level:2,hash:"api",children:[]}],title:"React Grid component",headers:{product:"material-ui",title:"React Grid component",components:["Grid"],githubLabel:"component: Grid",materialDesign:"https://material.io/design/layout/understanding-layout.html"}},pt:{description:"O leiaute responsivo da grade do Material Design se adapta ao tamanho e orienta\xe7\xe3o da tela, garantindo a consist\xeancia entre leiautes.",location:"/docs/data/material/components/grid/grid-pt.md",rendered:['<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n  <symbol id="anchor-link-icon" viewBox="0 0 16 16">\n    <path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" />\n  </symbol>\n</svg>','<h1>Grid</h1><p class="description">O leiaute responsivo da grade do Material Design se adapta ao tamanho e orienta\xe7\xe3o da tela, garantindo a consist\xeancia entre leiautes.</p>\n\n<p>Uma <a href="https://material.io/design/layout/responsive-layout-grid.html" target="_blank" rel="noopener nofollow">grade</a> cria consist\xeancia visual entre leiautes, enquanto permite flexibilidade em uma ampla variedade de projetos. A UI responsiva do Material Design \xe9 baseada em uma grade de 12 colunas.</p>\n',{component:"modules/components/ComponentLinkHeader.js"},'<blockquote>\n<p>O componente <code>Grid</code> n\xe3o deve ser confundido com um data grid; ele est\xe1 mais pr\xf3ximo de um layout grid. Para um cabe\xe7alho do data grid para <a href="/pt/x/react-data-grid/">o componente <code>DataGrid</code></a>.</p>\n</blockquote>\n<h2 id="heading-how-it-works"><span class="anchor-link" id="how-it-works"></span>Como funciona<a aria-labelledby="heading-how-it-works" class="anchor-link-style" href="#how-it-works" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>O sistema de grade \xe9 implementado com o componente <code>Grid</code>:</p>\n<ul>\n<li>Ela usa <a href="https://www.w3.org/TR/css-flexbox-1/" target="_blank" rel="noopener nofollow">o m\xf3dulo CSS de box flex\xedvel</a> para alta flexibilidade.</li>\n<li>Existem dois tipos de leiautes: <em>cont\xeaineres</em> e <em>itens</em>.</li>\n<li>Larguras de itens s\xe3o definidas em porcentagens, desse modo s\xe3o sempre fluidas e dimensionadas de acordo os seus elementos pai.</li>\n<li>Itens t\xeam preenchimento para criar o espa\xe7amento entre itens individuais.</li>\n<li>Existem cinco pontos de quebra (breakpoints) na grade: xs, sm, md, lg e xl.</li>\n<li>Integer values can be given to each breakpoint, indicating how many of the 12 available columns are occupied by the component when the viewport width satisfies the <a href="/pt/material-ui/customization/breakpoints/#default-breakpoints">breakpoint constraints</a>.</li>\n</ul>\n<p>Se voc\xea \xe9 <strong>novo ou n\xe3o est\xe1 familiarizado com o flexbox</strong>, n\xf3s recomendamos voc\xea a ler este <a href="https://css-tricks.com/snippets/css/a-guide-to-flexbox/">guia do Flexbox CSS-Tricks</a>.</p>\n<h2 id="heading-fluid-grids"><span class="anchor-link" id="fluid-grids"></span>Grades flu\xeddas<a aria-labelledby="heading-fluid-grids" class="anchor-link-style" href="#fluid-grids" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>As grades flu\xeddas usam colunas que dimensionam e redimensionam o conte\xfado. Uma disposi\xe7\xe3o fluida de malha pode usar pontos de ruptura para determinar se precisa mudar drasticamente.</p>\n<h3 id="heading-basic-grid"><span class="anchor-link" id="basic-grid"></span>Grade b\xe1sica<a aria-labelledby="heading-basic-grid" class="anchor-link-style" href="#basic-grid" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>As larguras das colunas \xe9 representada por um numero inteiro que varia de 1 a 12. Podemos aplica-las a qualquer ponto de ruptura para indicar quantas colunas s\xe3o ocupadas pelo componente.</p>\n<p>Um valor aplicado a um ponto de ruptura se aplica a todos os outros pontos maiores, a menos que seja alterado, como ser\xe1 visto posteriormente nesta p\xe1gina. Por exemplo nesse trecho <code>xs={12}</code> definimos que o componente ocupar\xe1 toda a largura da tela, independente do tamanho da tela.</p>\n',{demo:"BasicGrid.js",bg:!0},'<h3 id="heading-grid-with-multiple-breakpoints"><span class="anchor-link" id="grid-with-multiple-breakpoints"></span>Grade com pontos de quebra<a aria-labelledby="heading-grid-with-multiple-breakpoints" class="anchor-link-style" href="#grid-with-multiple-breakpoints" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>Podemos definir v\xe1rias larguras para os componentes, resultando em um leiaute que muda de acordo com o ponto de ruptura. Os valores de largura dados para pontos de quebra maiores, substituem aqueles dados a pontos de quebra menores.</p>\n<p>Aqui por exemplo <code>xs={12} sm={6}</code> define que o componente ocupar\xe1 metade da largura da tela (6 colunas) em um dispositivo com resolu\xe7\xe3o de 600px pra cima. J\xe1 para dispositivos menores, o componente vai tomar todas as 12 colunas.</p>\n',{demo:"FullWidthGrid.js",bg:!0},'<h2 id="heading-spacing"><span class="anchor-link" id="spacing"></span>Espa\xe7amento<a aria-labelledby="heading-spacing" class="anchor-link-style" href="#spacing" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>To control space between children, use the <code>spacing</code> prop. The spacing value can be any positive number, including decimals and any string. The prop is converted into a CSS property using the <a href="/pt/material-ui/customization/spacing/"><code>theme.spacing()</code></a> helper.</p>\n',{demo:"SpacingGrid.js",bg:!0},'<h3 id="heading-row-amp-column-spacing"><span class="anchor-link" id="row-amp-column-spacing"></span>Row &amp; column spacing<a aria-labelledby="heading-row-amp-column-spacing" class="anchor-link-style" href="#row-amp-column-spacing" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>As props <code>rowSpacing</code> e <code>columnSpacing</code> nos permite especificar os espa\xe7os entre linhas e entre colunas de forma independente. \xc9 similar as propriedades <code>row-gap</code> e <code>column-gap</code> da <a href="/pt/system/grid/#row-gap-amp-column-gap">Malha CSS</a>.</p>\n',{demo:"RowAndColumnSpacing.js",bg:!0},'<h2 id="heading-responsive-values"><span class="anchor-link" id="responsive-values"></span>Valores responsivos<a aria-labelledby="heading-responsive-values" class="anchor-link-style" href="#responsive-values" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>You can switch the props&#39; value based on the active breakpoint. Podemos ativar as props de acordo com ponto de ruptura ativo Podemos ativar as props de acordo com ponto de ruptura ativo Por exemplo, podemos implementar o leiaute responsivo do Material Design <a href="https://material.io/design/layout/responsive-layout-grid.html" target="_blank" rel="noopener nofollow">&quot;recommended&quot;</a></p>\n',{demo:"ResponsiveGrid.js",bg:!0},'<p>Valores responsivos s\xe3o suportados por:</p>\n<ul>\n<li><code>colunas</code></li>\n<li><code>espa\xe7oDeColuna</code></li>\n<li><code>dire\xe7\xe3o</code></li>\n<li><code>espa\xe7oDeLinha</code></li>\n<li><code>spacing</code></li>\n<li>todas as outras propriedades do sistema <a href="#system-props">other props</a></li>\n</ul>\n<blockquote>\n<p>\u26a0\ufe0f Quando Usamos a prop de c\xf3digo responsivo <code>colunas</code>, cada item da manha precisa de seu correspondente ponto de ruptura. For instance, this is not working. The grid item misses the value for <code>md</code>:</p>\n<pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Grid</span></span> <span class="token attr-name">container</span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token literal-property property">xs</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token literal-property property">md</span><span class="token operator">:</span> <span class="token number">12</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Grid</span></span> <span class="token attr-name">item</span> <span class="token attr-name">xs</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token operator">></span> <span class="token operator">></span><span class="token punctuation">{</span><span class="token string">\' \'</span><span class="token punctuation">}</span>\n<span class="token operator">></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Grid</span></span><span class="token punctuation">></span></span>\n</code></pre>\n</blockquote>\n<h2 id="heading-interactive"><span class="anchor-link" id="interactive"></span>Interativo<a aria-labelledby="heading-interactive" class="anchor-link-style" href="#interactive" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>Abaixo est\xe1 uma demonstra\xe7\xe3o interativa que permite explorar os resultados visuais das diferentes configura\xe7\xf5es:</p>\n',{demo:"InteractiveGrid.js",hideToolbar:!0,bg:!0},'<h2 id="heading-auto-layout"><span class="anchor-link" id="auto-layout"></span>Leiaute Autom\xe1tico<a aria-labelledby="heading-auto-layout" class="anchor-link-style" href="#auto-layout" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>O leiaute autom\xe1tico faz com que o espa\xe7o dispon\xedvel seja compartilhado de forma proporcional <em>items</em> O leiaute autom\xe1tico faz com que o espa\xe7o dispon\xedvel seja compartilhado de forma proporcional <em>items</em> Isso tamb\xe9m quer dizer que podemos definir que a largura de um <em>item</em> se ajustar\xe1 automaticamente ao redor dele O leiaute autom\xe1tico faz com que o espa\xe7o dispon\xedvel seja compartilhado de forma proporcional <em>items</em> O leiaute autom\xe1tico faz com que o espa\xe7o dispon\xedvel seja compartilhado de forma proporcional <em>items</em> Isso tamb\xe9m quer dizer que podemos definir que a largura de um <em>item</em> se ajustar\xe1 automaticamente ao redor dele That also means you can set the width of one <em>item</em> and the others will automatically resize around it.</p>\n',{demo:"AutoGrid.js",bg:!0},'<h3 id="heading-variable-width-content"><span class="anchor-link" id="variable-width-content"></span>Margem negativa<a aria-labelledby="heading-variable-width-content" class="anchor-link-style" href="#variable-width-content" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>A demo a seguir n\xe3o segue as normas do Material Design mas ilustra bem como a malha pode ser usada para criar layouts complexos</p>\n',{demo:"VariableWidthGrid.js",bg:!0},'<h2 id="heading-complex-grid"><span class="anchor-link" id="complex-grid"></span>Grade Complexa<a aria-labelledby="heading-complex-grid" class="anchor-link-style" href="#complex-grid" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>As props <code>container</code> e <code>item</code> s\xe3o buleanas independentes; Podemo ser combinados para permitir que um componente Grid seja tanto um cont\xeainer flex como um filho (item do cont\xeainer)</p>\n',{demo:"ComplexGrid.js",bg:!0},'<h2 id="heading-nested-grid"><span class="anchor-link" id="nested-grid"></span>Grade Aninhada<a aria-labelledby="heading-nested-grid" class="anchor-link-style" href="#nested-grid" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>As props <code>container</code> e <code>item</code> s\xe3o buleanas independentes; Podemo ser combinados para permitir que um componente Grid seja tanto um cont\xeainer flex como um filho (item do cont\xeainer)</p>\n<blockquote>\n<p>Um <strong>container</strong> flex \xe9 a caixa gerada por um elemento com uma exibi\xe7\xe3o definida por <code>flex</code> ou <code>inline-flex</code>. Os filhos em um fluxo de um container flex s\xe3o chamados de flex <strong>items</strong> e s\xe3o dispostos usando o modelo de leiaute flex (flex layout).</p>\n</blockquote>\n<p><a href="https://www.w3.org/TR/css-flexbox-1/#box-model" target="_blank" rel="noopener nofollow">https://www.w3.org/TR/css-flexbox-1/#box-model</a></p>\n',{demo:"NestedGrid.js",bg:!0},'<p>\u26a0\ufe0f Definindo uma largura expl\xedcita para um elemento de grade que \xe9 um cont\xeainer flex\xedvel, item flex\xedvel e tem espa\xe7amento ao mesmo tempo, tem um comportamento inesperado, evite fazendo isto:</p>\n<pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Grid</span></span> <span class="token attr-name">spacing</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">}</span></span> <span class="token attr-name">container</span> <span class="token attr-name">item</span> <span class="token attr-name">xs</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">12</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n</code></pre>\n<p>Se voc\xea precisar fazer isso, remova uma das propriedades.</p>\n<h2 id="heading-columns"><span class="anchor-link" id="columns"></span>Colunas<a aria-labelledby="heading-columns" class="anchor-link-style" href="#columns" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>You can change the default number of columns (12) with the <code>columns</code> prop.</p>\n',{demo:"ColumnsGrid.js",bg:!0},'<h2 id="heading-limitations"><span class="anchor-link" id="limitations"></span>Limita\xe7\xf5es<a aria-labelledby="heading-limitations" class="anchor-link-style" href="#limitations" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><h3 id="heading-negative-margin"><span class="anchor-link" id="negative-margin"></span>Margem negativa<a aria-labelledby="heading-negative-margin" class="anchor-link-style" href="#negative-margin" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>H\xe1 uma limita\xe7\xe3o com a margem negativa que usamos para implementar o espa\xe7amento entre itens. Isto pode levar a comportamentos inesperados. Por exemplo, para aplicar uma cor de fundo, voc\xea precisa aplicar <code>display: flex;</code> no elemento pai.</p>\n<h3 id="heading-white-space-nowrap"><span class="anchor-link" id="white-space-nowrap"></span>white-space: nowrap;<a aria-labelledby="heading-white-space-nowrap" class="anchor-link-style" href="#white-space-nowrap" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>A configura\xe7\xe3o inicial em itens flex\xedveis \xe9 <code>min-width: auto</code>. Isto causa um conflito de posicionamento quando os elementos filhos est\xe3o usando <code>white-space: nowrap</code>. Voc\xea pode enfrentar o problema com:</p>\n<pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Grid</span></span> <span class="token attr-name">item</span> <span class="token attr-name">xs</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Typography</span></span> <span class="token attr-name">noWrap</span><span class="token punctuation">></span></span>\n</code></pre>\n<p>In order for the item to stay within the container you need to set <code>min-width: 0</code>. In practice, you can set the <code>zeroMinWidth</code> prop:</p>\n<pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Grid</span></span> <span class="token attr-name">item</span> <span class="token attr-name">xs</span> <span class="token attr-name">zeroMinWidth</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Typography</span></span> <span class="token attr-name">noWrap</span><span class="token punctuation">></span></span>\n</code></pre>\n',{demo:"AutoGridNoWrap.js",bg:!0},'<h3 id="heading-direction-column-column-reverse"><span class="anchor-link" id="direction-column-column-reverse"></span>direction: column | column-reverse<a aria-labelledby="heading-direction-column-column-reverse" class="anchor-link-style" href="#direction-column-column-reverse" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>As propriedades <code>xs</code>, <code>sm</code>, <code>md</code>, <code>lg</code>, e <code>xl</code> <strong>n\xe3o s\xe3o suportadas</strong> com containers <code>direction=&quot;column&quot;</code> e <code>direction=&quot;column-reverse&quot;</code>.</p>\n<p>Elas definem o n\xfamero de grades que o componente usar\xe1 para um determinado ponto de quebra. Elas destinam-se a controlar a <strong>largura</strong> usando <code>flex-basis</code> em cont\xeaineres <code>row</code>, mas elas ir\xe3o impactar a altura em cont\xeaineres <code>column</code>. Se usadas, essas propriedades podem ter efeitos indesej\xe1veis na altura dos elementos do item <code>Grid</code>.</p>\n<h2 id="heading-css-grid-layout"><span class="anchor-link" id="css-grid-layout"></span>Leiaute de Grade CSS<a aria-labelledby="heading-css-grid-layout" class="anchor-link-style" href="#css-grid-layout" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>O componente <code>Grid</code> est\xe1 usando o CSS flexbox internamente. Mas como visto abaixo, voc\xea pode facilmente usar <a href="/pt/system/grid/">o sistema</a> e CSS Grid para a personaliza\xe7\xe3o de suas p\xe1ginas.</p>\n',{demo:"CSSGrid.js",bg:!0},'<h2 id="heading-system-props"><span class="anchor-link" id="system-props"></span>System props<a aria-labelledby="heading-system-props" class="anchor-link-style" href="#system-props" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>Como um componente CSS utilit\xe1rio, o <code>Grid</code> suporta todas as propriedades <a href="/pt/system/properties/"><code>do sistema</code></a>. You can use them as props directly on the component. Por exemplo, um preenchimento:</p>\n<pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Grid</span></span> <span class="token attr-name">item</span> <span class="token attr-name">p</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n</code></pre>\n','<h2 id="heading-api"><span class="anchor-link" id="api"></span>API<a aria-labelledby="heading-api" class="anchor-link-style" href="#api" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><ul>\n<li><a href="/pt/material-ui/api/grid/"><code>&lt;Grid /&gt;</code></a></li>\n</ul>\n'],toc:[{text:"Como funciona",level:2,hash:"how-it-works",children:[]},{text:"Grades flu\xeddas",level:2,hash:"fluid-grids",children:[{text:"Grade b\xe1sica",level:3,hash:"basic-grid"},{text:"Grade com pontos de quebra",level:3,hash:"grid-with-multiple-breakpoints"}]},{text:"Espa\xe7amento",level:2,hash:"spacing",children:[{text:"Row &amp; column spacing",level:3,hash:"row-amp-column-spacing"}]},{text:"Valores responsivos",level:2,hash:"responsive-values",children:[]},{text:"Interativo",level:2,hash:"interactive",children:[]},{text:"Leiaute Autom\xe1tico",level:2,hash:"auto-layout",children:[{text:"Margem negativa",level:3,hash:"variable-width-content"}]},{text:"Grade Complexa",level:2,hash:"complex-grid",children:[]},{text:"Grade Aninhada",level:2,hash:"nested-grid",children:[]},{text:"Colunas",level:2,hash:"columns",children:[]},{text:"Limita\xe7\xf5es",level:2,hash:"limitations",children:[{text:"Margem negativa",level:3,hash:"negative-margin"},{text:"white-space: nowrap;",level:3,hash:"white-space-nowrap"},{text:"direction: column | column-reverse",level:3,hash:"direction-column-column-reverse"}]},{text:"Leiaute de Grade CSS",level:2,hash:"css-grid-layout",children:[]},{text:"System props",level:2,hash:"system-props",children:[]},{text:"API",level:2,hash:"api",children:[]}],title:"Componente React Grade",headers:{product:"material-ui",title:"Componente React Grade",components:["Grid"],githubLabel:"component: Grid",materialDesign:"https://material.io/design/layout/understanding-layout.html"}},zh:{description:"Material Design \u54cd\u5e94\u5f0f\u5e03\u5c40\u7684\u6805\u683c\u53ef\u9002\u5e94\u5c4f\u5e55\u5927\u5c0f\u548c\u65b9\u5411\uff0c\u786e\u4fdd\u5e03\u5c40\u5728\u4e0d\u540c\u5c3a\u5bf8\u4e4b\u95f4\u7684\u4e00\u81f4\u6027\u3002",location:"/docs/data/material/components/grid/grid-zh.md",rendered:['<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n  <symbol id="anchor-link-icon" viewBox="0 0 16 16">\n    <path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" />\n  </symbol>\n</svg>','<h1>Grid</h1><p class="description">Material Design \u54cd\u5e94\u5f0f\u5e03\u5c40\u7684\u6805\u683c\u53ef\u9002\u5e94\u5c4f\u5e55\u5927\u5c0f\u548c\u65b9\u5411\uff0c\u786e\u4fdd\u5e03\u5c40\u5728\u4e0d\u540c\u5c3a\u5bf8\u4e4b\u95f4\u7684\u4e00\u81f4\u6027\u3002</p>\n\n<p><a href="https://material.io/design/layout/responsive-layout-grid.html" target="_blank" rel="noopener nofollow">Grid \u6805\u683c\u7ec4\u4ef6</a> \u80fd\u786e\u4fdd\u4e0d\u540c\u5e03\u5c40\u95f4\u7684\u89c6\u89c9\u5c42\u9762\u7684\u8212\u9002\u611f\uff0c\u540c\u65f6\u5728\u4f17\u591a\u4e0d\u540c\u8bbe\u8ba1\u4e2d\u4fdd\u6301\u7075\u6d3b\u6027\u3002 Material Design \u57fa\u4e8e 12 \u5217\u7684\u7f51\u683c\u5e03\u5c40\u6765\u505a\u5230 UI \u7684\u54cd\u5e94\u5f0f\u3002</p>\n',{component:"modules/components/ComponentLinkHeader.js"},'<blockquote>\n<p>\u26a0\ufe0f <code>\u6805\u683c</code> \u7ec4\u4ef6\u4e0d\u8981\u4e0e\u627f\u8f7d\u5927\u91cf\u6570\u636e\u7684\u8868\u683c\uff08data grid\uff09\u8fdb\u884c\u6df7\u6dc6\uff1b\u8fd9\u4e2a\u7ec4\u4ef6\u66f4\u503e\u5411\u4e8e\u5728\u5e03\u5c40\u4e2d\u4f7f\u7528\u3002 \u5982\u679c\u9700\u4f7f\u7528\u627f\u8f7d\u5927\u91cf\u6570\u636e\u7684\u8868\u683c\uff0c\u8bf7\u770b\u8fd9\u91cc\u7684 <a href="/zh/x/react-data-grid/"> <code>\u6570\u636e\u8868\u683c</code> \u7ec4\u4ef6</a>\u3002</p>\n</blockquote>\n<h2 id="heading-how-it-works"><span class="anchor-link" id="how-it-works"></span>\u5de5\u4f5c\u539f\u7406<a aria-labelledby="heading-how-it-works" class="anchor-link-style" href="#how-it-works" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>\u6805\u683c\u7cfb\u7edf\u662f\u901a\u8fc7 <code>Grid</code> \u7ec4\u4ef6\u5b9e\u73b0\u7684\uff1a</p>\n<ul>\n<li>\u5b83\u4f7f\u7528 <a href="https://www.w3.org/TR/css-flexbox-1/" target="_blank" rel="noopener nofollow">CSS \u5f39\u6027\u76d2\u5b50\u6a21\u5757</a> \u6765\u505a\u5230\u9ad8\u5ea6\u7075\u6d3b\u3002</li>\n<li>\u5b83\u6709\u4e24\u79cd\u7c7b\u578b\u7684\u5e03\u5c40\uff1a <em>containers</em> \uff0c _items_\u3002</li>\n<li>\u6bcf\u9879\u7684\u5bbd\u5ea6\u662f\u6309\u767e\u5206\u6bd4\u8bbe\u7f6e\u7684\uff0c\u6240\u4ee5\u5b83\u4eec\u7684\u5927\u5c0f\u603b\u662f\u76f8\u5bf9\u4e8e\u5b83\u4eec\u7684\u7236\u5143\u7d20\u6d41\u52a8\u3002</li>\n<li>\u5b50\u9879\u76ee\uff08items\uff09\u4f7f\u7528\u5185\u8fb9\u8ddd\u6765\u4fdd\u6301\u548c\u5176\u4ed6\u5757\uff08items\uff09\u7684\u95f4\u8ddd\u3002</li>\n<li>\u5176\u4e2d\u4e94\u4e2a\u65ad\u70b9\u53ef\u4f9b\u4f7f\u7528\uff1axs\uff0csm\uff0cmd\uff0clg \u548c xl\u3002</li>\n<li>Integer values can be given to each breakpoint, indicating how many of the 12 available columns are occupied by the component when the viewport width satisfies the <a href="/zh/material-ui/customization/breakpoints/#default-breakpoints">breakpoint constraints</a>.</li>\n</ul>\n<p>\u82e5\u4f60\u5bf9 <strong>flexbox \u4e0d\u592a\u719f\u6089</strong>\uff0c\u6211\u4eec\u5efa\u8bae\u4f60\u9605\u8bfb <a href="https://css-tricks.com/snippets/css/a-guide-to-flexbox/">CSS-Tricks flexbox</a> \u624b\u518c\u3002</p>\n<h2 id="heading-fluid-grids"><span class="anchor-link" id="fluid-grids"></span>Fluid grids \u6d41\u5f0f\u7f51\u683c<a aria-labelledby="heading-fluid-grids" class="anchor-link-style" href="#fluid-grids" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>\u6d41\u5f0f\u7f51\u683c\u53ef\u4ee5\u901a\u8fc7\u5217\uff08column\uff09\u6765\u7f29\u653e\u548c\u8c03\u6574\u5185\u5bb9\u7684\u5927\u5c0f\u3002 \u5728\u4f7f\u7528\u6d41\u5f0f\u7f51\u683c\u5e03\u5c40\u65f6\uff0c\u53ef\u4ee5\u901a\u8fc7\u65ad\u70b9\u6765\u51b3\u5b9a\u8be5\u5e03\u5c40\u662f\u5426\u9700\u8981\u5927\u5e45\u6539\u53d8\u3002</p>\n<h3 id="heading-basic-grid"><span class="anchor-link" id="basic-grid"></span>\u57fa\u672c\u6805\u683c<a aria-labelledby="heading-basic-grid" class="anchor-link-style" href="#basic-grid" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>\u6bcf\u4e00\u5217\u7684\u5bbd\u5ea6\u662f 1 \u5230 12 \u4e4b\u95f4\u7684\u6574\u6570\u503c\uff1b\u8fd9\u4e9b\u5bbd\u5ea6\u5e94\u7528\u4e8e\u4efb\u4f55\u65ad\u70b9\uff0c\u4e14\u8868\u660e\u4e86\u7ec4\u4ef6\u5360\u7528\u591a\u5c11\u5217\u3002</p>\n<p>A value given to a breakpoint applies to all the other breakpoints wider than it (unless overridden, as you can read later in this page). For example, <code>xs={12}</code> sizes a component to occupy the whole viewport width regardless of its size. \u4f8b\u5982\uff0c\u65e0\u8bba\u7ec4\u4ef6\u7684\u5927\u5c0f\u5982\u4f55\uff0c<code>xs={12}</code> \u90fd\u4f1a\u5360\u636e\u6574\u4e2a\u89c6\u53e3\u7684\u5bbd\u5ea6\u3002 For example, <code>xs={12}</code> sizes a component to occupy the whole viewport width regardless of its size.</p>\n',{demo:"BasicGrid.js",bg:!0},'<h3 id="heading-grid-with-multiple-breakpoints"><span class="anchor-link" id="grid-with-multiple-breakpoints"></span>\u6709\u65ad\u70b9\u7684\u6805\u683c<a aria-labelledby="heading-grid-with-multiple-breakpoints" class="anchor-link-style" href="#grid-with-multiple-breakpoints" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>Components may have multiple widths defined, causing the layout to change at the defined breakpoint. Width values given to larger breakpoints override those given to smaller breakpoints. \u4f60\u53ef\u4ee5\u7ed9\u8f83\u5927\u7684\u65ad\u70b9\u6307\u5b9a\u5bbd\u5ea6\u503c\u3002 \u90a3\u4e48\u5b83\u4f1a\u8986\u76d6\u7ed9\u8f83\u5c0f\u65ad\u70b9\u6307\u5b9a\u7684\u5bbd\u5ea6\u503c\u3002</p>\n<p>For example, <code>xs={12} sm={6}</code> sizes a component to occupy half of the viewport width (6 columns) when viewport width is <a href="/zh/material-ui/customization/breakpoints/#default-breakpoints">600 or more pixels</a>. For smaller viewports, the component fills all 12 available columns. \u5bf9\u4e8e\u8f83\u5c0f\u7684\u89c6\u53e3\uff0c\u8be5\u7ec4\u4ef6\u5c06\u586b\u5145\u6240\u6709 12 \u4e2a\u53ef\u7528\u7684\u5217\u3002 For smaller viewports, the component fills all 12 available columns.</p>\n',{demo:"FullWidthGrid.js",bg:!0},'<h2 id="heading-spacing"><span class="anchor-link" id="spacing"></span>Spacing \u95f4\u8ddd<a aria-labelledby="heading-spacing" class="anchor-link-style" href="#spacing" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>To control space between children, use the <code>spacing</code> prop. The spacing value can be any positive number, including decimals and any string. \u8be5\u5c5e\u6027\u501f\u52a9 <a href="/zh/material-ui/customization/spacing/"><code>theme.spaming()</code></a> \u88ab\u8f6c\u6362\u4e3a CSS \u5c5e\u6027\u3002 \u95f4\u8ddd\u503c\u53ef\u4ee5\u662f\u4efb\u4f55\u6570\u5b57\uff08\u5305\u62ec\u6d6e\u70b9\u6570\uff09\u548c\u5b57\u7b26\u4e32\u3002 The prop is converted into a CSS property using the <a href="/zh/material-ui/customization/spacing/"><code>theme.spacing()</code></a> helper.</p>\n',{demo:"SpacingGrid.js",bg:!0},'<h3 id="heading-row-amp-column-spacing"><span class="anchor-link" id="row-amp-column-spacing"></span>\u884c\u3001\u5217\u95f4\u8ddd<a aria-labelledby="heading-row-amp-column-spacing" class="anchor-link-style" href="#row-amp-column-spacing" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p><code>rowSpacing</code> \u548c <code>columnSpacing</code> \u5c5e\u6027\u5141\u8bb8\u72ec\u7acb\u6307\u5b9a\u884c\u548c\u5217\u95f4\u8ddd\u3002 The <code>rowSpacing</code> and <code>columnSpacing</code> props allow for specifying the row and column gaps independently. It&#39;s similar to the <code>row-gap</code> and <code>column-gap</code> properties of <a href="/zh/system/grid/#row-gap-amp-column-gap">CSS Grid</a>.</p>\n',{demo:"RowAndColumnSpacing.js",bg:!0},'<h2 id="heading-responsive-values"><span class="anchor-link" id="responsive-values"></span>\u54cd\u5e94\u5f0f\u7684\u503c<a aria-labelledby="heading-responsive-values" class="anchor-link-style" href="#responsive-values" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>\u60a8\u53ef\u4ee5\u6839\u636e\u6d3b\u52a8\u7684\u65ad\u70b9\u5207\u6362\u5c5e\u6027\u7684\u503c\u3002 You can switch the props&#39; value based on the active breakpoint. For instance, we can implement the <a href="https://material.io/design/layout/responsive-layout-grid.html" target="_blank" rel="noopener nofollow">&quot;recommended&quot;</a> responsive layout grid of Material Design.</p>\n',{demo:"ResponsiveGrid.js",bg:!0},'<p>\u4e0b\u5217\u5c5e\u6027\u652f\u6301\u54cd\u5e94\u5f0f\u7684\u503c\uff1a</p>\n<ul>\n<li><code>columns</code></li>\n<li><code>columnSpacing</code></li>\n<li><code>direction</code></li>\n<li><code>rowSpacing</code></li>\n<li><code>spacing</code></li>\n<li>\u7cfb\u7edf\u4e2d\u7684\u6240\u6709<a href="#system-props">\u5176\u5b83\u5c5e\u6027</a></li>\n</ul>\n<blockquote>\n<p>\u26a0\ufe0f When using a responsive <code>columns</code> prop, each grid item needs its corresponding breakpoint. For instance, this is not working. The grid item misses the value for <code>md</code>: \u4f8b\u5982\uff0c\u8fd9\u79cd\u505a\u6cd5\u884c\u4e0d\u901a\u3002 \u4f8b\u5982\uff0c\u4e0b\u9762\u8fd9\u79cd\u505a\u6cd5\u662f\u884c\u4e0d\u901a\u7684\u3002 \u7f51\u683c\u9879\u4e22\u5931\u4e86 <code>md</code> \u7684\u503c\uff1a</p>\n<pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Grid</span></span> <span class="token attr-name">container</span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token literal-property property">xs</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token literal-property property">md</span><span class="token operator">:</span> <span class="token number">12</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Grid</span></span> <span class="token attr-name">item</span> <span class="token attr-name">xs</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n<span class="token operator">></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Grid</span></span><span class="token punctuation">></span></span>\n</code></pre>\n</blockquote>\n<h2 id="heading-interactive"><span class="anchor-link" id="interactive"></span>\u4ea4\u4e92\u5f0f<a aria-labelledby="heading-interactive" class="anchor-link-style" href="#interactive" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>\u4e0b\u9762\u662f\u4e00\u4e2a\u4ea4\u4e92\u5f0f\u7684\u6f14\u793a\uff0c\u4f60\u4e5f\u53ef\u4ee5\u63a2\u7d22\u4e0d\u540c\u8bbe\u7f6e\u4e0b\u7684\u89c6\u89c9\u7ed3\u679c\uff1a</p>\n',{demo:"InteractiveGrid.js",hideToolbar:!0,bg:!0},'<h2 id="heading-auto-layout"><span class="anchor-link" id="auto-layout"></span>\u81ea\u9002\u5e94\u5e03\u5c40<a aria-labelledby="heading-auto-layout" class="anchor-link-style" href="#auto-layout" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>\u81ea\u9002\u5e94\u5e03\u5c40\u53ef\u4ee5\u8ba9 <em>\u5b50\u9879\uff08items\uff09</em> \u4e4b\u95f4\u5e73\u5747\u5730\u5229\u7528\u7a7a\u95f4\u3002 \u8fd9\u4e5f\u610f\u5473\u7740\u4f60\u53ef\u4ee5\u663e\u5f0f\u8bbe\u7f6e\u4e00\u4e2a <em>\u5b50\u9879\uff08item\uff09</em> \u7684\u5bbd\u5ea6\uff0c\u800c\u4f7f\u5176\u4ed6\u9879\u7684\u5927\u5c0f\u6839\u636e\u5176\u5bbd\u5ea6\u81ea\u52a8\u8fdb\u884c\u8c03\u6574\u3002</p>\n',{demo:"AutoGrid.js",bg:!0},'<h3 id="heading-variable-width-content"><span class="anchor-link" id="variable-width-content"></span>\u8d1f\u8fb9\u8ddd<a aria-labelledby="heading-variable-width-content" class="anchor-link-style" href="#variable-width-content" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The Auto-layout makes the <em>items</em> equitably share the available space. That also means you can set the width of one <em>item</em> and the others will automatically resize around it.</p>\n',{demo:"VariableWidthGrid.js",bg:!0},'<h2 id="heading-complex-grid"><span class="anchor-link" id="complex-grid"></span>\u590d\u6742\u7684\u6805\u683c<a aria-labelledby="heading-complex-grid" class="anchor-link-style" href="#complex-grid" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>The following demo doesn&#39;t follow the Material Design guidelines, but illustrates how the grid can be used to build complex layouts.</p>\n',{demo:"ComplexGrid.js",bg:!0},'<h2 id="heading-nested-grid"><span class="anchor-link" id="nested-grid"></span>\u5d4c\u5957\u6805\u683c<a aria-labelledby="heading-nested-grid" class="anchor-link-style" href="#nested-grid" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>The <code>container</code> and <code>item</code> props are two independent booleans; they can be combined to allow a Grid component to be both a flex container and child.</p>\n<blockquote>\n<p>\u4e00\u4e2a flex <strong>\u5bb9\u5668</strong> \u662f\u901a\u8fc7\u5c06 <code>flex</code> \u6216 <code>inline-flex</code>\u7684\u8ba1\u7b97\u663e\u793a\u8d4b\u4e88\u7ed9\u4e00\u4e2a\u5143\u7d20\u800c\u751f\u6210\u7684\u3002 Flex \u5bb9\u5668\u7684\u6d41\u5165\u5b50\u5bb9\u5668\u79f0\u4e3a flex <strong>items</strong>\uff0c \u5b83\u4eec\u4f7f\u7528 flex \u5e03\u5c40\u6a21\u578b\u8fdb\u884c\u5e03\u5c40\u3002</p>\n</blockquote>\n<p><a href="https://www.w3.org/TR/css-flexbox-1/#box-model" target="_blank" rel="noopener nofollow">https://www.w3.org/TR/css-flexbox-1/#box-model</a></p>\n',{demo:"NestedGrid.js",bg:!0},'<p>\u26a0\ufe0f \u7ed9 Flex \u5bb9\u5668\u3001Flex \u5b50\u9879\u4ee5\u53ca\u540c\u65f6\u5e26\u6709\u95f4\u8ddd\u7684 Grid \u5143\u7d20\u5b9a\u4e49\u4e00\u4e2a\u663e\u5f0f\u5bbd\u5ea6\u4f1a\u5bfc\u81f4\u610f\u5916\u7684\u884c\u4e3a\uff0c\u9700\u8981\u907f\u514d\u8fd9\u6837\u505a\uff1a</p>\n<pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Grid</span></span> <span class="token attr-name">spacing</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">}</span></span> <span class="token attr-name">container</span> <span class="token attr-name">item</span> <span class="token attr-name">xs</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">12</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n</code></pre>\n<p>\u5982\u679c\u4f60\u9700\u8981\u8fd9\u6837\u505a\uff0c\u90a3\u4e48\u8bf7\u79fb\u51fa\u5176\u4e2d\u7684\u4e00\u4e2a\u5c5e\u6027\u3002</p>\n<h2 id="heading-columns"><span class="anchor-link" id="columns"></span>\u5217<a aria-labelledby="heading-columns" class="anchor-link-style" href="#columns" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>You can change the default number of columns (12) with the <code>columns</code> prop.</p>\n',{demo:"ColumnsGrid.js",bg:!0},'<h2 id="heading-limitations"><span class="anchor-link" id="limitations"></span>\u8bbe\u8ba1\u5c40\u9650<a aria-labelledby="heading-limitations" class="anchor-link-style" href="#limitations" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><h3 id="heading-negative-margin"><span class="anchor-link" id="negative-margin"></span>\u8d1f\u8fb9\u8ddd<a aria-labelledby="heading-negative-margin" class="anchor-link-style" href="#negative-margin" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>\u9879\u76ee\u4e4b\u95f4\u7684\u8fb9\u8ddd\u4ee5\u8d1f\u8fb9\u8ddd\u7684\u5f62\u5f0f\u6765\u5b9e\u73b0\u3002 \u8fd9\u6837\u505a\u7684\u8bdd\u53ef\u80fd\u4f1a\u4ea7\u751f\u610f\u6599\u4e4b\u5916\u7684\u7ed3\u679c\u3002 The spacing between items is implemented with a negative margin. This might lead to unexpected behaviors. For instance, to apply a background color, you need to apply <code>display: flex;</code> to the parent.</p>\n<h3 id="heading-white-space-nowrap"><span class="anchor-link" id="white-space-nowrap"></span>white-space: nowrap;<a aria-labelledby="heading-white-space-nowrap" class="anchor-link-style" href="#white-space-nowrap" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>\u5f39\u6027\u5e03\u5c40\u5143\u7d20\u7684\u9ed8\u8ba4\u5c5e\u6027\u503c\u4e3a <code>min-width\uff1aauto</code>\u3002 \u5f53\u5b50\u5143\u7d20\u4f7f\u7528 <code>white-space: nowrap;</code>\u65f6\u4f1a\u51fa\u73b0\u5e03\u5c40\u51b2\u7a81\u3002 \u60a8\u53ef\u4ee5\u4ece\u4ee5\u4e0b\u5185\u5bb9\u770b\u5230\u8fd9\u4e2a\u95ee\u9898\uff1a</p>\n<pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Grid</span></span> <span class="token attr-name">item</span> <span class="token attr-name">xs</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Typography</span></span> <span class="token attr-name">noWrap</span><span class="token punctuation">></span></span>\n</code></pre>\n<p>\u4e3a\u4e86\u4f7f\u9879\u7559\u5728\u5bb9\u5668\u5185\uff0c\u60a8\u9700\u8981\u8bbe\u7f6e <code>min-width: 0</code>\u3002 \u5728\u5b9e\u9645\u64cd\u4f5c\u4e2d\uff0c\u4f60\u53ef\u4ee5\u8bbe\u7f6e <code>zeroMinWidth</code> \u5c5e\u6027\u6765\u5b9e\u73b0\u5b83\uff1a</p>\n<pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Grid</span></span> <span class="token attr-name">item</span> <span class="token attr-name">xs</span> <span class="token attr-name">zeroMinWidth</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Typography</span></span> <span class="token attr-name">noWrap</span><span class="token punctuation">></span></span>\n</code></pre>\n',{demo:"AutoGridNoWrap.js",bg:!0},'<h3 id="heading-direction-column-column-reverse"><span class="anchor-link" id="direction-column-column-reverse"></span>direction: column | column-reverse<a aria-labelledby="heading-direction-column-column-reverse" class="anchor-link-style" href="#direction-column-column-reverse" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p><code>direction=&quot;column&quot;</code> \u548c <code>direction=&quot;column-reverse&quot;</code> \u7684\u5bb9\u5668<strong>\u4e0d\u652f\u6301</strong>\u548c\u65ad\u70b9\u6709\u5173\u7684 <code>xs</code>, <code>sm</code>, <code>md</code>, <code>lg</code>\uff0c\u4ee5\u53ca <code>xl</code> \u8fd9\u51e0\u4e2a\u5c5e\u6027\u3002</p>\n<p>They define the number of grids the component will use for a given breakpoint. \u5b83\u4eec\u51b3\u5b9a\u5728\u67d0\u4e2a\u65ad\u70b9\u4e0b\u7ec4\u4ef6\u5360\u51e0\u4e2a\u7f51\u683c\u3002 They define the number of grids the component will use for a given breakpoint. They are intended to control <strong>width</strong> using <code>flex-basis</code> in <code>row</code> containers but they will impact height in <code>column</code> containers. If used, these props may have undesirable effects on the height of the <code>Grid</code> item elements. \u5982\u679c\u4f7f\u7528\u8fd9\u4e9b\u5c5e\u6027\uff0c\u53ef\u80fd\u4f1a\u5bf9 <code>Grid</code> \u5757\u5143\u7d20\u7684\u9ad8\u5ea6\u4ea7\u751f\u526f\u4f5c\u7528\u3002 If used, these props may have undesirable effects on the height of the <code>Grid</code> item elements.</p>\n<h2 id="heading-css-grid-layout"><span class="anchor-link" id="css-grid-layout"></span>CSS \u6805\u683c\u5e03\u5c40<a aria-labelledby="heading-css-grid-layout" class="anchor-link-style" href="#css-grid-layout" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>The <code>Grid</code> component is using CSS flexbox internally. But as seen below, you can easily use <a href="/zh/system/grid/">the system</a> and CSS Grid to layout your pages. But as seen below, you can easily use <a href="/zh/system/grid/">the system</a> and CSS Grid to layout your pages. But as seen below, you can easily use <a href="/zh/system/grid/">the system</a> and CSS Grid to layout your pages. \u4f46\u5982\u4e0b\u6587\u6240\u8ff0\uff0c\u60a8\u4e5f\u53ef\u4ee5\u4f7f\u7528 <a href="/zh/system/grid/">\u7cfb\u7edf\uff08system\uff09</a>\u548c CSS \u7f51\u683c\u6765\u8f7b\u677e\u5730\u5e03\u5c40\u60a8\u7684\u9875\u9762\u3002</p>\n',{demo:"CSSGrid.js",bg:!0},'<h2 id="heading-system-props"><span class="anchor-link" id="system-props"></span>System props<a aria-labelledby="heading-system-props" class="anchor-link-style" href="#system-props" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>As a CSS utility component, the <code>Grid</code> supports all <a href="/zh/system/properties/"><code>system</code></a> properties. You can use them as props directly on the component. For instance, a padding: You can use them as props directly on the component. For instance, a padding: You can use them as props directly on the component. For instance, a padding: \u60a8\u53ef\u4ee5\u76f4\u63a5\u5728\u7ec4\u4ef6\u4e0a\u4f7f\u7528\u5b83\u4eec\u4f5c\u4e3a props\u3002 \u4f8b\u5982\u60a8\u60f3\u5b9a\u4e49  padding \u65f6\uff1a</p>\n<pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Grid</span></span> <span class="token attr-name">item</span> <span class="token attr-name">p</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n</code></pre>\n','<h2 id="heading-api"><span class="anchor-link" id="api"></span>API<a aria-labelledby="heading-api" class="anchor-link-style" href="#api" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><ul>\n<li><a href="/zh/material-ui/api/grid/"><code>&lt;Grid /&gt;</code></a></li>\n</ul>\n'],toc:[{text:"\u5de5\u4f5c\u539f\u7406",level:2,hash:"how-it-works",children:[]},{text:"Fluid grids \u6d41\u5f0f\u7f51\u683c",level:2,hash:"fluid-grids",children:[{text:"\u57fa\u672c\u6805\u683c",level:3,hash:"basic-grid"},{text:"\u6709\u65ad\u70b9\u7684\u6805\u683c",level:3,hash:"grid-with-multiple-breakpoints"}]},{text:"Spacing \u95f4\u8ddd",level:2,hash:"spacing",children:[{text:"\u884c\u3001\u5217\u95f4\u8ddd",level:3,hash:"row-amp-column-spacing"}]},{text:"\u54cd\u5e94\u5f0f\u7684\u503c",level:2,hash:"responsive-values",children:[]},{text:"\u4ea4\u4e92\u5f0f",level:2,hash:"interactive",children:[]},{text:"\u81ea\u9002\u5e94\u5e03\u5c40",level:2,hash:"auto-layout",children:[{text:"\u8d1f\u8fb9\u8ddd",level:3,hash:"variable-width-content"}]},{text:"\u590d\u6742\u7684\u6805\u683c",level:2,hash:"complex-grid",children:[]},{text:"\u5d4c\u5957\u6805\u683c",level:2,hash:"nested-grid",children:[]},{text:"\u5217",level:2,hash:"columns",children:[]},{text:"\u8bbe\u8ba1\u5c40\u9650",level:2,hash:"limitations",children:[{text:"\u8d1f\u8fb9\u8ddd",level:3,hash:"negative-margin"},{text:"white-space: nowrap;",level:3,hash:"white-space-nowrap"},{text:"direction: column | column-reverse",level:3,hash:"direction-column-column-reverse"}]},{text:"CSS \u6805\u683c\u5e03\u5c40",level:2,hash:"css-grid-layout",children:[]},{text:"System props",level:2,hash:"system-props",children:[]},{text:"API",level:2,hash:"api",children:[]}],title:"React Grid\uff08\u6805\u683c\uff09\u7ec4\u4ef6",headers:{product:"material-ui",title:"React Grid\uff08\u6805\u683c\uff09\u7ec4\u4ef6",components:["Grid"],githubLabel:"component: Grid",materialDesign:"https://material.io/design/layout/understanding-layout.html"}}},jn={"BasicGrid.js":{module:"./BasicGrid.js",raw:"import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\n\nconst Item = styled(Paper)(({ theme }) => ({\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: 'center',\n  color: theme.palette.text.secondary,\n}));\n\nexport default function BasicGrid() {\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <Grid container spacing={2}>\n        <Grid item xs={8}>\n          <Item>xs=8</Item>\n        </Grid>\n        <Grid item xs={4}>\n          <Item>xs=4</Item>\n        </Grid>\n        <Grid item xs={4}>\n          <Item>xs=4</Item>\n        </Grid>\n        <Grid item xs={8}>\n          <Item>xs=8</Item>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n",jsxPreview:"<Grid container spacing={2}>\n  <Grid item xs={8}>\n    <Item>xs=8</Item>\n  </Grid>\n  <Grid item xs={4}>\n    <Item>xs=4</Item>\n  </Grid>\n  <Grid item xs={4}>\n    <Item>xs=4</Item>\n  </Grid>\n  <Grid item xs={8}>\n    <Item>xs=8</Item>\n  </Grid>\n</Grid>",moduleTS:"./BasicGrid.js",rawTS:"import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\n\nconst Item = styled(Paper)(({ theme }) => ({\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: 'center',\n  color: theme.palette.text.secondary,\n}));\n\nexport default function BasicGrid() {\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <Grid container spacing={2}>\n        <Grid item xs={8}>\n          <Item>xs=8</Item>\n        </Grid>\n        <Grid item xs={4}>\n          <Item>xs=4</Item>\n        </Grid>\n        <Grid item xs={4}>\n          <Item>xs=4</Item>\n        </Grid>\n        <Grid item xs={8}>\n          <Item>xs=8</Item>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n"},"RowAndColumnSpacing.js":{module:"./RowAndColumnSpacing.js",raw:"import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Grid from '@mui/material/Grid';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\n\nconst Item = styled(Paper)(({ theme }) => ({\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: 'center',\n  color: theme.palette.text.secondary,\n}));\n\nexport default function RowAndColumnSpacing() {\n  return (\n    <Box sx={{ width: '100%' }}>\n      <Grid container rowSpacing={1} columnSpacing={{ xs: 1, sm: 2, md: 3 }}>\n        <Grid item xs={6}>\n          <Item>1</Item>\n        </Grid>\n        <Grid item xs={6}>\n          <Item>2</Item>\n        </Grid>\n        <Grid item xs={6}>\n          <Item>3</Item>\n        </Grid>\n        <Grid item xs={6}>\n          <Item>4</Item>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n",jsxPreview:"<Grid container rowSpacing={1} columnSpacing={{ xs: 1, sm: 2, md: 3 }}>\n  <Grid item xs={6}>\n    <Item>1</Item>\n  </Grid>\n  <Grid item xs={6}>\n    <Item>2</Item>\n  </Grid>\n  <Grid item xs={6}>\n    <Item>3</Item>\n  </Grid>\n  <Grid item xs={6}>\n    <Item>4</Item>\n  </Grid>\n</Grid>",moduleTS:"./RowAndColumnSpacing.js",rawTS:"import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Grid from '@mui/material/Grid';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\n\nconst Item = styled(Paper)(({ theme }) => ({\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: 'center',\n  color: theme.palette.text.secondary,\n}));\n\nexport default function RowAndColumnSpacing() {\n  return (\n    <Box sx={{ width: '100%' }}>\n      <Grid container rowSpacing={1} columnSpacing={{ xs: 1, sm: 2, md: 3 }}>\n        <Grid item xs={6}>\n          <Item>1</Item>\n        </Grid>\n        <Grid item xs={6}>\n          <Item>2</Item>\n        </Grid>\n        <Grid item xs={6}>\n          <Item>3</Item>\n        </Grid>\n        <Grid item xs={6}>\n          <Item>4</Item>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n"},"SpacingGrid.js":{module:"./SpacingGrid.js",raw:"import * as React from 'react';\nimport Grid from '@mui/material/Grid';\nimport FormLabel from '@mui/material/FormLabel';\nimport FormControl from '@mui/material/FormControl';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport HighlightedCode from 'docs/src/modules/components/HighlightedCode';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport Radio from '@mui/material/Radio';\nimport Paper from '@mui/material/Paper';\n\nexport default function SpacingGrid() {\n  const [spacing, setSpacing] = React.useState(2);\n\n  const handleChange = (event) => {\n    setSpacing(Number(event.target.value));\n  };\n\n  const jsx = `\n<Grid container spacing={${spacing}}>\n`;\n\n  return (\n    <Grid sx={{ flexGrow: 1 }} container spacing={2}>\n      <Grid item xs={12}>\n        <Grid container justifyContent=\"center\" spacing={spacing}>\n          {[0, 1, 2].map((value) => (\n            <Grid key={value} item>\n              <Paper\n                sx={{\n                  height: 140,\n                  width: 100,\n                  backgroundColor: (theme) =>\n                    theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n                }}\n              />\n            </Grid>\n          ))}\n        </Grid>\n      </Grid>\n      <Grid item xs={12}>\n        <Paper sx={{ p: 2 }}>\n          <Grid container>\n            <Grid item>\n              <FormControl component=\"fieldset\">\n                <FormLabel component=\"legend\">spacing</FormLabel>\n                <RadioGroup\n                  name=\"spacing\"\n                  aria-label=\"spacing\"\n                  value={spacing.toString()}\n                  onChange={handleChange}\n                  row\n                >\n                  {[0, 0.5, 1, 2, 3, 4, 8, 12].map((value) => (\n                    <FormControlLabel\n                      key={value}\n                      value={value.toString()}\n                      control={<Radio />}\n                      label={value.toString()}\n                    />\n                  ))}\n                </RadioGroup>\n              </FormControl>\n            </Grid>\n          </Grid>\n        </Paper>\n        <HighlightedCode code={jsx} language=\"jsx\" />\n      </Grid>\n    </Grid>\n  );\n}\n",moduleTS:"./SpacingGrid.js",rawTS:"import * as React from 'react';\nimport Grid from '@mui/material/Grid';\nimport FormLabel from '@mui/material/FormLabel';\nimport FormControl from '@mui/material/FormControl';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport HighlightedCode from 'docs/src/modules/components/HighlightedCode';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport Radio from '@mui/material/Radio';\nimport Paper from '@mui/material/Paper';\n\nexport default function SpacingGrid() {\n  const [spacing, setSpacing] = React.useState(2);\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSpacing(Number((event.target as HTMLInputElement).value));\n  };\n\n  const jsx = `\n<Grid container spacing={${spacing}}>\n`;\n\n  return (\n    <Grid sx={{ flexGrow: 1 }} container spacing={2}>\n      <Grid item xs={12}>\n        <Grid container justifyContent=\"center\" spacing={spacing}>\n          {[0, 1, 2].map((value) => (\n            <Grid key={value} item>\n              <Paper\n                sx={{\n                  height: 140,\n                  width: 100,\n                  backgroundColor: (theme) =>\n                    theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n                }}\n              />\n            </Grid>\n          ))}\n        </Grid>\n      </Grid>\n      <Grid item xs={12}>\n        <Paper sx={{ p: 2 }}>\n          <Grid container>\n            <Grid item>\n              <FormControl component=\"fieldset\">\n                <FormLabel component=\"legend\">spacing</FormLabel>\n                <RadioGroup\n                  name=\"spacing\"\n                  aria-label=\"spacing\"\n                  value={spacing.toString()}\n                  onChange={handleChange}\n                  row\n                >\n                  {[0, 0.5, 1, 2, 3, 4, 8, 12].map((value) => (\n                    <FormControlLabel\n                      key={value}\n                      value={value.toString()}\n                      control={<Radio />}\n                      label={value.toString()}\n                    />\n                  ))}\n                </RadioGroup>\n              </FormControl>\n            </Grid>\n          </Grid>\n        </Paper>\n        <HighlightedCode code={jsx} language=\"jsx\" />\n      </Grid>\n    </Grid>\n  );\n}\n"},"FullWidthGrid.js":{module:"./FullWidthGrid.js",raw:"import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\n\nconst Item = styled(Paper)(({ theme }) => ({\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: 'center',\n  color: theme.palette.text.secondary,\n}));\n\nexport default function FullWidthGrid() {\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <Grid container spacing={2}>\n        <Grid item xs={6} md={8}>\n          <Item>xs=6 md=8</Item>\n        </Grid>\n        <Grid item xs={6} md={4}>\n          <Item>xs=6 md=4</Item>\n        </Grid>\n        <Grid item xs={6} md={4}>\n          <Item>xs=6 md=4</Item>\n        </Grid>\n        <Grid item xs={6} md={8}>\n          <Item>xs=6 md=8</Item>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n",jsxPreview:"<Grid container spacing={2}>\n  <Grid item xs={6} md={8}>\n    <Item>xs=6 md=8</Item>\n  </Grid>\n  <Grid item xs={6} md={4}>\n    <Item>xs=6 md=4</Item>\n  </Grid>\n  <Grid item xs={6} md={4}>\n    <Item>xs=6 md=4</Item>\n  </Grid>\n  <Grid item xs={6} md={8}>\n    <Item>xs=6 md=8</Item>\n  </Grid>\n</Grid>",moduleTS:"./FullWidthGrid.js",rawTS:"import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\n\nconst Item = styled(Paper)(({ theme }) => ({\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: 'center',\n  color: theme.palette.text.secondary,\n}));\n\nexport default function FullWidthGrid() {\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <Grid container spacing={2}>\n        <Grid item xs={6} md={8}>\n          <Item>xs=6 md=8</Item>\n        </Grid>\n        <Grid item xs={6} md={4}>\n          <Item>xs=6 md=4</Item>\n        </Grid>\n        <Grid item xs={6} md={4}>\n          <Item>xs=6 md=4</Item>\n        </Grid>\n        <Grid item xs={6} md={8}>\n          <Item>xs=6 md=8</Item>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n"},"ResponsiveGrid.js":{module:"./ResponsiveGrid.js",raw:"import * as React from 'react';\nimport { experimentalStyled as styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\n\nconst Item = styled(Paper)(({ theme }) => ({\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n  ...theme.typography.body2,\n  padding: theme.spacing(2),\n  textAlign: 'center',\n  color: theme.palette.text.secondary,\n}));\n\nexport default function ResponsiveGrid() {\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <Grid container spacing={{ xs: 2, md: 3 }} columns={{ xs: 4, sm: 8, md: 12 }}>\n        {Array.from(Array(6)).map((_, index) => (\n          <Grid item xs={2} sm={4} md={4} key={index}>\n            <Item>xs=2</Item>\n          </Grid>\n        ))}\n      </Grid>\n    </Box>\n  );\n}\n",jsxPreview:"<Grid container spacing={{ xs: 2, md: 3 }} columns={{ xs: 4, sm: 8, md: 12 }}>\n  {Array.from(Array(6)).map((_, index) => (\n    <Grid item xs={2} sm={4} md={4} key={index}>\n      <Item>xs=2</Item>\n    </Grid>\n  ))}\n</Grid>",moduleTS:"./ResponsiveGrid.js",rawTS:"import * as React from 'react';\nimport { experimentalStyled as styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\n\nconst Item = styled(Paper)(({ theme }) => ({\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n  ...theme.typography.body2,\n  padding: theme.spacing(2),\n  textAlign: 'center',\n  color: theme.palette.text.secondary,\n}));\n\nexport default function ResponsiveGrid() {\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <Grid container spacing={{ xs: 2, md: 3 }} columns={{ xs: 4, sm: 8, md: 12 }}>\n        {Array.from(Array(6)).map((_, index) => (\n          <Grid item xs={2} sm={4} md={4} key={index}>\n            <Item>xs=2</Item>\n          </Grid>\n        ))}\n      </Grid>\n    </Box>\n  );\n}\n"},"AutoGrid.js":{module:"./AutoGrid.js",raw:"import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\n\nconst Item = styled(Paper)(({ theme }) => ({\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: 'center',\n  color: theme.palette.text.secondary,\n}));\n\nexport default function AutoGrid() {\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <Grid container spacing={3}>\n        <Grid item xs>\n          <Item>xs</Item>\n        </Grid>\n        <Grid item xs={6}>\n          <Item>xs=6</Item>\n        </Grid>\n        <Grid item xs>\n          <Item>xs</Item>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n",jsxPreview:"<Grid container spacing={3}>\n  <Grid item xs>\n    <Item>xs</Item>\n  </Grid>\n  <Grid item xs={6}>\n    <Item>xs=6</Item>\n  </Grid>\n  <Grid item xs>\n    <Item>xs</Item>\n  </Grid>\n</Grid>",moduleTS:"./AutoGrid.js",rawTS:"import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\n\nconst Item = styled(Paper)(({ theme }) => ({\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: 'center',\n  color: theme.palette.text.secondary,\n}));\n\nexport default function AutoGrid() {\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <Grid container spacing={3}>\n        <Grid item xs>\n          <Item>xs</Item>\n        </Grid>\n        <Grid item xs={6}>\n          <Item>xs=6</Item>\n        </Grid>\n        <Grid item xs>\n          <Item>xs</Item>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n"},"VariableWidthGrid.js":{module:"./VariableWidthGrid.js",raw:"import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\n\nconst Item = styled(Paper)(({ theme }) => ({\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: 'center',\n  color: theme.palette.text.secondary,\n}));\n\nexport default function VariableWidthGrid() {\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <Grid container spacing={3}>\n        <Grid item xs=\"auto\">\n          <Item>variable width content</Item>\n        </Grid>\n        <Grid item xs={6}>\n          <Item>xs=6</Item>\n        </Grid>\n        <Grid item xs>\n          <Item>xs</Item>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n",jsxPreview:'<Grid container spacing={3}>\n  <Grid item xs="auto">\n    <Item>variable width content</Item>\n  </Grid>\n  <Grid item xs={6}>\n    <Item>xs=6</Item>\n  </Grid>\n  <Grid item xs>\n    <Item>xs</Item>\n  </Grid>\n</Grid>',moduleTS:"./VariableWidthGrid.js",rawTS:"import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\n\nconst Item = styled(Paper)(({ theme }) => ({\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: 'center',\n  color: theme.palette.text.secondary,\n}));\n\nexport default function VariableWidthGrid() {\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <Grid container spacing={3}>\n        <Grid item xs=\"auto\">\n          <Item>variable width content</Item>\n        </Grid>\n        <Grid item xs={6}>\n          <Item>xs=6</Item>\n        </Grid>\n        <Grid item xs>\n          <Item>xs</Item>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n"},"InteractiveGrid.js":{module:"./InteractiveGrid.js",raw:'import * as React from \'react\';\nimport Grid from \'@mui/material/Grid\';\nimport FormControl from \'@mui/material/FormControl\';\nimport FormLabel from \'@mui/material/FormLabel\';\nimport FormControlLabel from \'@mui/material/FormControlLabel\';\nimport RadioGroup from \'@mui/material/RadioGroup\';\nimport Radio from \'@mui/material/Radio\';\nimport Paper from \'@mui/material/Paper\';\nimport HighlightedCode from \'docs/src/modules/components/HighlightedCode\';\n\nexport default function InteractiveGrid() {\n  const [direction, setDirection] = React.useState(\'row\');\n  const [justifyContent, setJustifyContent] = React.useState(\'center\');\n  const [alignItems, setAlignItems] = React.useState(\'center\');\n\n  const jsx = `\n<Grid\n  container\n  direction="${direction}"\n  justifyContent="${justifyContent}"\n  alignItems="${alignItems}"\n>\n`;\n\n  return (\n    <Grid sx={{ flexGrow: 1 }} container>\n      <Grid item xs={12}>\n        <Grid\n          sx={{ height: 300, pb: 2 }}\n          container\n          spacing={2}\n          alignItems={alignItems}\n          direction={direction}\n          justifyContent={justifyContent}\n        >\n          {[0, 1, 2].map((value) => (\n            <Grid key={value} item>\n              <Paper\n                sx={{\n                  p: 2,\n                  backgroundColor: (theme) =>\n                    theme.palette.mode === \'dark\' ? \'#1A2027\' : \'#fff\',\n                  height: \'100%\',\n                  color: \'text.secondary\',\n                  pt: `${(value + 1) * 10}px`,\n                  pb: `${(value + 1) * 10}px`,\n                }}\n              >\n                {`Cell ${value + 1}`}\n              </Paper>\n            </Grid>\n          ))}\n        </Grid>\n      </Grid>\n      <Grid item xs={12}>\n        <Paper sx={{ p: 2 }}>\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <FormControl component="fieldset">\n                <FormLabel component="legend">direction</FormLabel>\n                <RadioGroup\n                  row\n                  name="direction"\n                  aria-label="direction"\n                  value={direction}\n                  onChange={(event) => {\n                    setDirection(event.target.value);\n                  }}\n                >\n                  <FormControlLabel value="row" control={<Radio />} label="row" />\n                  <FormControlLabel\n                    value="row-reverse"\n                    control={<Radio />}\n                    label="row-reverse"\n                  />\n                  <FormControlLabel\n                    value="column"\n                    control={<Radio />}\n                    label="column"\n                  />\n                  <FormControlLabel\n                    value="column-reverse"\n                    control={<Radio />}\n                    label="column-reverse"\n                  />\n                </RadioGroup>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl component="fieldset">\n                <FormLabel component="legend">justifyContent</FormLabel>\n                <RadioGroup\n                  row\n                  name="justifyContent"\n                  aria-label="justifyContent"\n                  value={justifyContent}\n                  onChange={(event) => {\n                    setJustifyContent(event.target.value);\n                  }}\n                >\n                  <FormControlLabel\n                    value="flex-start"\n                    control={<Radio />}\n                    label="flex-start"\n                  />\n                  <FormControlLabel\n                    value="center"\n                    control={<Radio />}\n                    label="center"\n                  />\n                  <FormControlLabel\n                    value="flex-end"\n                    control={<Radio />}\n                    label="flex-end"\n                  />\n                  <FormControlLabel\n                    value="space-between"\n                    control={<Radio />}\n                    label="space-between"\n                  />\n                  <FormControlLabel\n                    value="space-around"\n                    control={<Radio />}\n                    label="space-around"\n                  />\n                  <FormControlLabel\n                    value="space-evenly"\n                    control={<Radio />}\n                    label="space-evenly"\n                  />\n                </RadioGroup>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl component="fieldset">\n                <FormLabel component="legend">alignItems</FormLabel>\n                <RadioGroup\n                  row\n                  name="alignItems"\n                  aria-label="align items"\n                  value={alignItems}\n                  onChange={(event) => {\n                    setAlignItems(event.target.value);\n                  }}\n                >\n                  <FormControlLabel\n                    value="flex-start"\n                    control={<Radio />}\n                    label="flex-start"\n                  />\n                  <FormControlLabel\n                    value="center"\n                    control={<Radio />}\n                    label="center"\n                  />\n                  <FormControlLabel\n                    value="flex-end"\n                    control={<Radio />}\n                    label="flex-end"\n                  />\n                  <FormControlLabel\n                    value="stretch"\n                    control={<Radio />}\n                    label="stretch"\n                  />\n                  <FormControlLabel\n                    value="baseline"\n                    control={<Radio />}\n                    label="baseline"\n                  />\n                </RadioGroup>\n              </FormControl>\n            </Grid>\n          </Grid>\n        </Paper>\n      </Grid>\n      <Grid item xs={12}>\n        <HighlightedCode code={jsx} language="jsx" />\n      </Grid>\n    </Grid>\n  );\n}\n',moduleTS:"./InteractiveGrid.js",rawTS:'import * as React from \'react\';\nimport Grid, { GridDirection } from \'@mui/material/Grid\';\nimport FormControl from \'@mui/material/FormControl\';\nimport FormLabel from \'@mui/material/FormLabel\';\nimport FormControlLabel from \'@mui/material/FormControlLabel\';\nimport RadioGroup from \'@mui/material/RadioGroup\';\nimport Radio from \'@mui/material/Radio\';\nimport Paper from \'@mui/material/Paper\';\nimport HighlightedCode from \'docs/src/modules/components/HighlightedCode\';\n\ntype GridItemsAlignment =\n  | \'flex-start\'\n  | \'center\'\n  | \'flex-end\'\n  | \'stretch\'\n  | \'baseline\';\n\ntype GridJustification =\n  | \'flex-start\'\n  | \'center\'\n  | \'flex-end\'\n  | \'space-between\'\n  | \'space-around\'\n  | \'space-evenly\';\n\nexport default function InteractiveGrid() {\n  const [direction, setDirection] = React.useState<GridDirection>(\'row\');\n  const [justifyContent, setJustifyContent] =\n    React.useState<GridJustification>(\'center\');\n  const [alignItems, setAlignItems] = React.useState<GridItemsAlignment>(\'center\');\n\n  const jsx = `\n<Grid\n  container\n  direction="${direction}"\n  justifyContent="${justifyContent}"\n  alignItems="${alignItems}"\n>\n`;\n\n  return (\n    <Grid sx={{ flexGrow: 1 }} container>\n      <Grid item xs={12}>\n        <Grid\n          sx={{ height: 300, pb: 2 }}\n          container\n          spacing={2}\n          alignItems={alignItems}\n          direction={direction}\n          justifyContent={justifyContent}\n        >\n          {[0, 1, 2].map((value) => (\n            <Grid key={value} item>\n              <Paper\n                sx={{\n                  p: 2,\n                  backgroundColor: (theme) =>\n                    theme.palette.mode === \'dark\' ? \'#1A2027\' : \'#fff\',\n                  height: \'100%\',\n                  color: \'text.secondary\',\n                  pt: `${(value + 1) * 10}px`,\n                  pb: `${(value + 1) * 10}px`,\n                }}\n              >\n                {`Cell ${value + 1}`}\n              </Paper>\n            </Grid>\n          ))}\n        </Grid>\n      </Grid>\n      <Grid item xs={12}>\n        <Paper sx={{ p: 2 }}>\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <FormControl component="fieldset">\n                <FormLabel component="legend">direction</FormLabel>\n                <RadioGroup\n                  row\n                  name="direction"\n                  aria-label="direction"\n                  value={direction}\n                  onChange={(event) => {\n                    setDirection(\n                      (event.target as HTMLInputElement).value as GridDirection,\n                    );\n                  }}\n                >\n                  <FormControlLabel value="row" control={<Radio />} label="row" />\n                  <FormControlLabel\n                    value="row-reverse"\n                    control={<Radio />}\n                    label="row-reverse"\n                  />\n                  <FormControlLabel\n                    value="column"\n                    control={<Radio />}\n                    label="column"\n                  />\n                  <FormControlLabel\n                    value="column-reverse"\n                    control={<Radio />}\n                    label="column-reverse"\n                  />\n                </RadioGroup>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl component="fieldset">\n                <FormLabel component="legend">justifyContent</FormLabel>\n                <RadioGroup\n                  row\n                  name="justifyContent"\n                  aria-label="justifyContent"\n                  value={justifyContent}\n                  onChange={(event) => {\n                    setJustifyContent(\n                      (event.target as HTMLInputElement).value as GridJustification,\n                    );\n                  }}\n                >\n                  <FormControlLabel\n                    value="flex-start"\n                    control={<Radio />}\n                    label="flex-start"\n                  />\n                  <FormControlLabel\n                    value="center"\n                    control={<Radio />}\n                    label="center"\n                  />\n                  <FormControlLabel\n                    value="flex-end"\n                    control={<Radio />}\n                    label="flex-end"\n                  />\n                  <FormControlLabel\n                    value="space-between"\n                    control={<Radio />}\n                    label="space-between"\n                  />\n                  <FormControlLabel\n                    value="space-around"\n                    control={<Radio />}\n                    label="space-around"\n                  />\n                  <FormControlLabel\n                    value="space-evenly"\n                    control={<Radio />}\n                    label="space-evenly"\n                  />\n                </RadioGroup>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl component="fieldset">\n                <FormLabel component="legend">alignItems</FormLabel>\n                <RadioGroup\n                  row\n                  name="alignItems"\n                  aria-label="align items"\n                  value={alignItems}\n                  onChange={(event) => {\n                    setAlignItems(\n                      (event.target as HTMLInputElement).value as GridItemsAlignment,\n                    );\n                  }}\n                >\n                  <FormControlLabel\n                    value="flex-start"\n                    control={<Radio />}\n                    label="flex-start"\n                  />\n                  <FormControlLabel\n                    value="center"\n                    control={<Radio />}\n                    label="center"\n                  />\n                  <FormControlLabel\n                    value="flex-end"\n                    control={<Radio />}\n                    label="flex-end"\n                  />\n                  <FormControlLabel\n                    value="stretch"\n                    control={<Radio />}\n                    label="stretch"\n                  />\n                  <FormControlLabel\n                    value="baseline"\n                    control={<Radio />}\n                    label="baseline"\n                  />\n                </RadioGroup>\n              </FormControl>\n            </Grid>\n          </Grid>\n        </Paper>\n      </Grid>\n      <Grid item xs={12}>\n        <HighlightedCode code={jsx} language="jsx" />\n      </Grid>\n    </Grid>\n  );\n}\n'},"ComplexGrid.js":{module:"./ComplexGrid.js",raw:"import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Grid from '@mui/material/Grid';\nimport Paper from '@mui/material/Paper';\nimport Typography from '@mui/material/Typography';\nimport ButtonBase from '@mui/material/ButtonBase';\n\nconst Img = styled('img')({\n  margin: 'auto',\n  display: 'block',\n  maxWidth: '100%',\n  maxHeight: '100%',\n});\n\nexport default function ComplexGrid() {\n  return (\n    <Paper\n      sx={{\n        p: 2,\n        margin: 'auto',\n        maxWidth: 500,\n        flexGrow: 1,\n        backgroundColor: (theme) =>\n          theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n      }}\n    >\n      <Grid container spacing={2}>\n        <Grid item>\n          <ButtonBase sx={{ width: 128, height: 128 }}>\n            <Img alt=\"complex\" src=\"/static/images/grid/complex.jpg\" />\n          </ButtonBase>\n        </Grid>\n        <Grid item xs={12} sm container>\n          <Grid item xs container direction=\"column\" spacing={2}>\n            <Grid item xs>\n              <Typography gutterBottom variant=\"subtitle1\" component=\"div\">\n                Standard license\n              </Typography>\n              <Typography variant=\"body2\" gutterBottom>\n                Full resolution 1920x1080 \u2022 JPEG\n              </Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                ID: 1030114\n              </Typography>\n            </Grid>\n            <Grid item>\n              <Typography sx={{ cursor: 'pointer' }} variant=\"body2\">\n                Remove\n              </Typography>\n            </Grid>\n          </Grid>\n          <Grid item>\n            <Typography variant=\"subtitle1\" component=\"div\">\n              $19.00\n            </Typography>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n}\n",moduleTS:"./ComplexGrid.js",rawTS:"import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Grid from '@mui/material/Grid';\nimport Paper from '@mui/material/Paper';\nimport Typography from '@mui/material/Typography';\nimport ButtonBase from '@mui/material/ButtonBase';\n\nconst Img = styled('img')({\n  margin: 'auto',\n  display: 'block',\n  maxWidth: '100%',\n  maxHeight: '100%',\n});\n\nexport default function ComplexGrid() {\n  return (\n    <Paper\n      sx={{\n        p: 2,\n        margin: 'auto',\n        maxWidth: 500,\n        flexGrow: 1,\n        backgroundColor: (theme) =>\n          theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n      }}\n    >\n      <Grid container spacing={2}>\n        <Grid item>\n          <ButtonBase sx={{ width: 128, height: 128 }}>\n            <Img alt=\"complex\" src=\"/static/images/grid/complex.jpg\" />\n          </ButtonBase>\n        </Grid>\n        <Grid item xs={12} sm container>\n          <Grid item xs container direction=\"column\" spacing={2}>\n            <Grid item xs>\n              <Typography gutterBottom variant=\"subtitle1\" component=\"div\">\n                Standard license\n              </Typography>\n              <Typography variant=\"body2\" gutterBottom>\n                Full resolution 1920x1080 \u2022 JPEG\n              </Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                ID: 1030114\n              </Typography>\n            </Grid>\n            <Grid item>\n              <Typography sx={{ cursor: 'pointer' }} variant=\"body2\">\n                Remove\n              </Typography>\n            </Grid>\n          </Grid>\n          <Grid item>\n            <Typography variant=\"subtitle1\" component=\"div\">\n              $19.00\n            </Typography>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n}\n"},"NestedGrid.js":{module:"./NestedGrid.js",raw:"import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\n\nconst Item = styled(Paper)(({ theme }) => ({\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: 'center',\n  color: theme.palette.text.secondary,\n}));\n\nfunction FormRow() {\n  return (\n    <React.Fragment>\n      <Grid item xs={4}>\n        <Item>Item</Item>\n      </Grid>\n      <Grid item xs={4}>\n        <Item>Item</Item>\n      </Grid>\n      <Grid item xs={4}>\n        <Item>Item</Item>\n      </Grid>\n    </React.Fragment>\n  );\n}\n\nexport default function NestedGrid() {\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <Grid container spacing={1}>\n        <Grid container item spacing={3}>\n          <FormRow />\n        </Grid>\n        <Grid container item spacing={3}>\n          <FormRow />\n        </Grid>\n        <Grid container item spacing={3}>\n          <FormRow />\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n",jsxPreview:"<Grid container spacing={1}>\n  <Grid container item spacing={3}>\n    <FormRow />\n  </Grid>\n  <Grid container item spacing={3}>\n    <FormRow />\n  </Grid>\n  <Grid container item spacing={3}>\n    <FormRow />\n  </Grid>\n</Grid>",moduleTS:"./NestedGrid.js",rawTS:"import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\n\nconst Item = styled(Paper)(({ theme }) => ({\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: 'center',\n  color: theme.palette.text.secondary,\n}));\n\nfunction FormRow() {\n  return (\n    <React.Fragment>\n      <Grid item xs={4}>\n        <Item>Item</Item>\n      </Grid>\n      <Grid item xs={4}>\n        <Item>Item</Item>\n      </Grid>\n      <Grid item xs={4}>\n        <Item>Item</Item>\n      </Grid>\n    </React.Fragment>\n  );\n}\n\nexport default function NestedGrid() {\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <Grid container spacing={1}>\n        <Grid container item spacing={3}>\n          <FormRow />\n        </Grid>\n        <Grid container item spacing={3}>\n          <FormRow />\n        </Grid>\n        <Grid container item spacing={3}>\n          <FormRow />\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n"},"ColumnsGrid.js":{module:"./ColumnsGrid.js",raw:"import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\n\nconst Item = styled(Paper)(({ theme }) => ({\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: 'center',\n  color: theme.palette.text.secondary,\n}));\n\nexport default function ColumnsGrid() {\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <Grid container spacing={2} columns={16}>\n        <Grid item xs={8}>\n          <Item>xs=8</Item>\n        </Grid>\n        <Grid item xs={8}>\n          <Item>xs=8</Item>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n",jsxPreview:"<Grid container spacing={2} columns={16}>\n  <Grid item xs={8}>\n    <Item>xs=8</Item>\n  </Grid>\n  <Grid item xs={8}>\n    <Item>xs=8</Item>\n  </Grid>\n</Grid>",moduleTS:"./ColumnsGrid.js",rawTS:"import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\n\nconst Item = styled(Paper)(({ theme }) => ({\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: 'center',\n  color: theme.palette.text.secondary,\n}));\n\nexport default function ColumnsGrid() {\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <Grid container spacing={2} columns={16}>\n        <Grid item xs={8}>\n          <Item>xs=8</Item>\n        </Grid>\n        <Grid item xs={8}>\n          <Item>xs=8</Item>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n"},"AutoGridNoWrap.js":{module:"./AutoGridNoWrap.js",raw:"import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport Avatar from '@mui/material/Avatar';\nimport Typography from '@mui/material/Typography';\n\nconst StyledPaper = styled(Paper)(({ theme }) => ({\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n  ...theme.typography.body2,\n  padding: theme.spacing(2),\n  maxWidth: 400,\n  color: theme.palette.text.primary,\n}));\n\nconst message = `Truncation should be conditionally applicable on this long line of text\n as this is a much longer line than what the container can support. `;\n\nexport default function AutoGridNoWrap() {\n  return (\n    <Box sx={{ flexGrow: 1, overflow: 'hidden', px: 3 }}>\n      <StyledPaper\n        sx={{\n          my: 1,\n          mx: 'auto',\n          p: 2,\n        }}\n      >\n        <Grid container wrap=\"nowrap\" spacing={2}>\n          <Grid item>\n            <Avatar>W</Avatar>\n          </Grid>\n          <Grid item xs zeroMinWidth>\n            <Typography noWrap>{message}</Typography>\n          </Grid>\n        </Grid>\n      </StyledPaper>\n      <StyledPaper\n        sx={{\n          my: 1,\n          mx: 'auto',\n          p: 2,\n        }}\n      >\n        <Grid container wrap=\"nowrap\" spacing={2}>\n          <Grid item>\n            <Avatar>W</Avatar>\n          </Grid>\n          <Grid item xs>\n            <Typography noWrap>{message}</Typography>\n          </Grid>\n        </Grid>\n      </StyledPaper>\n      <StyledPaper\n        sx={{\n          my: 1,\n          mx: 'auto',\n          p: 2,\n        }}\n      >\n        <Grid container wrap=\"nowrap\" spacing={2}>\n          <Grid item>\n            <Avatar>W</Avatar>\n          </Grid>\n          <Grid item xs>\n            <Typography>{message}</Typography>\n          </Grid>\n        </Grid>\n      </StyledPaper>\n    </Box>\n  );\n}\n",moduleTS:"./AutoGridNoWrap.js",rawTS:"import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport Avatar from '@mui/material/Avatar';\nimport Typography from '@mui/material/Typography';\n\nconst StyledPaper = styled(Paper)(({ theme }) => ({\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n  ...theme.typography.body2,\n  padding: theme.spacing(2),\n  maxWidth: 400,\n  color: theme.palette.text.primary,\n}));\n\nconst message = `Truncation should be conditionally applicable on this long line of text\n as this is a much longer line than what the container can support. `;\n\nexport default function AutoGridNoWrap() {\n  return (\n    <Box sx={{ flexGrow: 1, overflow: 'hidden', px: 3 }}>\n      <StyledPaper\n        sx={{\n          my: 1,\n          mx: 'auto',\n          p: 2,\n        }}\n      >\n        <Grid container wrap=\"nowrap\" spacing={2}>\n          <Grid item>\n            <Avatar>W</Avatar>\n          </Grid>\n          <Grid item xs zeroMinWidth>\n            <Typography noWrap>{message}</Typography>\n          </Grid>\n        </Grid>\n      </StyledPaper>\n      <StyledPaper\n        sx={{\n          my: 1,\n          mx: 'auto',\n          p: 2,\n        }}\n      >\n        <Grid container wrap=\"nowrap\" spacing={2}>\n          <Grid item>\n            <Avatar>W</Avatar>\n          </Grid>\n          <Grid item xs>\n            <Typography noWrap>{message}</Typography>\n          </Grid>\n        </Grid>\n      </StyledPaper>\n      <StyledPaper\n        sx={{\n          my: 1,\n          mx: 'auto',\n          p: 2,\n        }}\n      >\n        <Grid container wrap=\"nowrap\" spacing={2}>\n          <Grid item>\n            <Avatar>W</Avatar>\n          </Grid>\n          <Grid item xs>\n            <Typography>{message}</Typography>\n          </Grid>\n        </Grid>\n      </StyledPaper>\n    </Box>\n  );\n}\n"},"CSSGrid.js":{module:"./CSSGrid.js",raw:"import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\n\nconst Item = styled(Paper)(({ theme }) => ({\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: 'center',\n  color: theme.palette.text.secondary,\n}));\n\nexport default function CSSGrid() {\n  return (\n    <Box sx={{ width: 1 }}>\n      <Box display=\"grid\" gridTemplateColumns=\"repeat(12, 1fr)\" gap={2}>\n        <Box gridColumn=\"span 8\">\n          <Item>xs=8</Item>\n        </Box>\n        <Box gridColumn=\"span 4\">\n          <Item>xs=4</Item>\n        </Box>\n        <Box gridColumn=\"span 4\">\n          <Item>xs=4</Item>\n        </Box>\n        <Box gridColumn=\"span 8\">\n          <Item>xs=8</Item>\n        </Box>\n      </Box>\n    </Box>\n  );\n}\n",jsxPreview:'<Box display="grid" gridTemplateColumns="repeat(12, 1fr)" gap={2}>\n  <Box gridColumn="span 8">\n    <Item>xs=8</Item>\n  </Box>\n  <Box gridColumn="span 4">\n    <Item>xs=4</Item>\n  </Box>\n  <Box gridColumn="span 4">\n    <Item>xs=4</Item>\n  </Box>\n  <Box gridColumn="span 8">\n    <Item>xs=8</Item>\n  </Box>\n</Box>',moduleTS:"./CSSGrid.js",rawTS:"import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\n\nconst Item = styled(Paper)(({ theme }) => ({\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: 'center',\n  color: theme.palette.text.secondary,\n}));\n\nexport default function CSSGrid() {\n  return (\n    <Box sx={{ width: 1 }}>\n      <Box display=\"grid\" gridTemplateColumns=\"repeat(12, 1fr)\" gap={2}>\n        <Box gridColumn=\"span 8\">\n          <Item>xs=8</Item>\n        </Box>\n        <Box gridColumn=\"span 4\">\n          <Item>xs=4</Item>\n        </Box>\n        <Box gridColumn=\"span 4\">\n          <Item>xs=4</Item>\n        </Box>\n        <Box gridColumn=\"span 8\">\n          <Item>xs=8</Item>\n        </Box>\n      </Box>\n    </Box>\n  );\n}\n"}},Cn={"./BasicGrid.js":function(){return(0,g.jsx)(m.Z,{sx:{flexGrow:1},children:t||(t=(0,g.jsxs)(h.ZP,{container:!0,spacing:2,children:[(0,g.jsx)(h.ZP,{item:!0,xs:8,children:(0,g.jsx)(x,{children:"xs=8"})}),(0,g.jsx)(h.ZP,{item:!0,xs:4,children:(0,g.jsx)(x,{children:"xs=4"})}),(0,g.jsx)(h.ZP,{item:!0,xs:4,children:(0,g.jsx)(x,{children:"xs=4"})}),(0,g.jsx)(h.ZP,{item:!0,xs:8,children:(0,g.jsx)(x,{children:"xs=8"})})]}))})},"./RowAndColumnSpacing.js":function(){return(0,g.jsx)(m.Z,{sx:{width:"100%"},children:(0,g.jsxs)(h.ZP,{container:!0,rowSpacing:1,columnSpacing:{xs:1,sm:2,md:3},children:[o||(o=(0,g.jsx)(h.ZP,{item:!0,xs:6,children:(0,g.jsx)(f,{children:"1"})})),i||(i=(0,g.jsx)(h.ZP,{item:!0,xs:6,children:(0,g.jsx)(f,{children:"2"})})),s||(s=(0,g.jsx)(h.ZP,{item:!0,xs:6,children:(0,g.jsx)(f,{children:"3"})})),r||(r=(0,g.jsx)(h.ZP,{item:!0,xs:6,children:(0,g.jsx)(f,{children:"4"})}))]})})},"./SpacingGrid.js":function(){var n=l.useState(2),e=(0,v.Z)(n,2),a=e[0],t=e[1],o="\n<Grid container spacing={".concat(a,"}>\n");return(0,g.jsxs)(h.ZP,{sx:{flexGrow:1},container:!0,spacing:2,children:[(0,g.jsx)(h.ZP,{item:!0,xs:12,children:(0,g.jsx)(h.ZP,{container:!0,justifyContent:"center",spacing:a,children:[0,1,2].map((function(n){return(0,g.jsx)(h.ZP,{item:!0,children:(0,g.jsx)(u.Z,{sx:{height:140,width:100,backgroundColor:function(n){return"dark"===n.palette.mode?"#1A2027":"#fff"}}})},n)}))})}),(0,g.jsxs)(h.ZP,{item:!0,xs:12,children:[(0,g.jsx)(u.Z,{sx:{p:2},children:(0,g.jsx)(h.ZP,{container:!0,children:(0,g.jsx)(h.ZP,{item:!0,children:(0,g.jsxs)(w.Z,{component:"fieldset",children:[b||(b=(0,g.jsx)(G.Z,{component:"legend",children:"spacing"})),(0,g.jsx)(I.Z,{name:"spacing","aria-label":"spacing",value:a.toString(),onChange:function(n){t(Number(n.target.value))},row:!0,children:[0,.5,1,2,3,4,8,12].map((function(n){return(0,g.jsx)(j.Z,{value:n.toString(),control:y||(y=(0,g.jsx)(S.Z,{})),label:n.toString()},n)}))})]})})})}),(0,g.jsx)(C.Z,{code:o,language:"jsx"})]})]})},"./FullWidthGrid.js":function(){return(0,g.jsx)(m.Z,{sx:{flexGrow:1},children:k||(k=(0,g.jsxs)(h.ZP,{container:!0,spacing:2,children:[(0,g.jsx)(h.ZP,{item:!0,xs:6,md:8,children:(0,g.jsx)(P,{children:"xs=6 md=8"})}),(0,g.jsx)(h.ZP,{item:!0,xs:6,md:4,children:(0,g.jsx)(P,{children:"xs=6 md=4"})}),(0,g.jsx)(h.ZP,{item:!0,xs:6,md:4,children:(0,g.jsx)(P,{children:"xs=6 md=4"})}),(0,g.jsx)(h.ZP,{item:!0,xs:6,md:8,children:(0,g.jsx)(P,{children:"xs=6 md=8"})})]}))})},"./ResponsiveGrid.js":function(){return(0,g.jsx)(m.Z,{sx:{flexGrow:1},children:(0,g.jsx)(h.ZP,{container:!0,spacing:{xs:2,md:3},columns:{xs:4,sm:8,md:12},children:B()(Array(6)).map((function(n,e){return(0,g.jsx)(h.ZP,{item:!0,xs:2,sm:4,md:4,children:Z||(Z=(0,g.jsx)(F,{children:"xs=2"}))},e)}))})})},"./AutoGrid.js":function(){return(0,g.jsx)(m.Z,{sx:{flexGrow:1},children:R||(R=(0,g.jsxs)(h.ZP,{container:!0,spacing:3,children:[(0,g.jsx)(h.ZP,{item:!0,xs:!0,children:(0,g.jsx)(L,{children:"xs"})}),(0,g.jsx)(h.ZP,{item:!0,xs:6,children:(0,g.jsx)(L,{children:"xs=6"})}),(0,g.jsx)(h.ZP,{item:!0,xs:!0,children:(0,g.jsx)(L,{children:"xs"})})]}))})},"./VariableWidthGrid.js":function(){return(0,g.jsx)(m.Z,{sx:{flexGrow:1},children:T||(T=(0,g.jsxs)(h.ZP,{container:!0,spacing:3,children:[(0,g.jsx)(h.ZP,{item:!0,xs:"auto",children:(0,g.jsx)(nn,{children:"variable width content"})}),(0,g.jsx)(h.ZP,{item:!0,xs:6,children:(0,g.jsx)(nn,{children:"xs=6"})}),(0,g.jsx)(h.ZP,{item:!0,xs:!0,children:(0,g.jsx)(nn,{children:"xs"})})]}))})},"./InteractiveGrid.js":function(){var n=l.useState("row"),e=(0,v.Z)(n,2),a=e[0],t=e[1],o=l.useState("center"),i=(0,v.Z)(o,2),s=i[0],r=i[1],c=l.useState("center"),d=(0,v.Z)(c,2),p=d[0],m=d[1],x='\n<Grid\n  container\n  direction="'.concat(a,'"\n  justifyContent="').concat(s,'"\n  alignItems="').concat(p,'"\n>\n');return(0,g.jsxs)(h.ZP,{sx:{flexGrow:1},container:!0,children:[(0,g.jsx)(h.ZP,{item:!0,xs:12,children:(0,g.jsx)(h.ZP,{sx:{height:300,pb:2},container:!0,spacing:2,alignItems:p,direction:a,justifyContent:s,children:[0,1,2].map((function(n){return(0,g.jsx)(h.ZP,{item:!0,children:(0,g.jsx)(u.Z,{sx:{p:2,backgroundColor:function(n){return"dark"===n.palette.mode?"#1A2027":"#fff"},height:"100%",color:"text.secondary",pt:"".concat(10*(n+1),"px"),pb:"".concat(10*(n+1),"px")},children:"Cell ".concat(n+1)})},n)}))})}),(0,g.jsx)(h.ZP,{item:!0,xs:12,children:(0,g.jsx)(u.Z,{sx:{p:2},children:(0,g.jsxs)(h.ZP,{container:!0,spacing:3,children:[(0,g.jsx)(h.ZP,{item:!0,xs:12,children:(0,g.jsxs)(w.Z,{component:"fieldset",children:[q||(q=(0,g.jsx)(G.Z,{component:"legend",children:"direction"})),(0,g.jsxs)(I.Z,{row:!0,name:"direction","aria-label":"direction",value:a,onChange:function(n){t(n.target.value)},children:[z||(z=(0,g.jsx)(j.Z,{value:"row",control:(0,g.jsx)(S.Z,{}),label:"row"})),W||(W=(0,g.jsx)(j.Z,{value:"row-reverse",control:(0,g.jsx)(S.Z,{}),label:"row-reverse"})),M||(M=(0,g.jsx)(j.Z,{value:"column",control:(0,g.jsx)(S.Z,{}),label:"column"})),D||(D=(0,g.jsx)(j.Z,{value:"column-reverse",control:(0,g.jsx)(S.Z,{}),label:"column-reverse"}))]})]})}),(0,g.jsx)(h.ZP,{item:!0,xs:12,children:(0,g.jsxs)(w.Z,{component:"fieldset",children:[H||(H=(0,g.jsx)(G.Z,{component:"legend",children:"justifyContent"})),(0,g.jsxs)(I.Z,{row:!0,name:"justifyContent","aria-label":"justifyContent",value:s,onChange:function(n){r(n.target.value)},children:[N||(N=(0,g.jsx)(j.Z,{value:"flex-start",control:(0,g.jsx)(S.Z,{}),label:"flex-start"})),_||(_=(0,g.jsx)(j.Z,{value:"center",control:(0,g.jsx)(S.Z,{}),label:"center"})),E||(E=(0,g.jsx)(j.Z,{value:"flex-end",control:(0,g.jsx)(S.Z,{}),label:"flex-end"})),V||(V=(0,g.jsx)(j.Z,{value:"space-between",control:(0,g.jsx)(S.Z,{}),label:"space-between"})),$||($=(0,g.jsx)(j.Z,{value:"space-around",control:(0,g.jsx)(S.Z,{}),label:"space-around"})),O||(O=(0,g.jsx)(j.Z,{value:"space-evenly",control:(0,g.jsx)(S.Z,{}),label:"space-evenly"}))]})]})}),(0,g.jsx)(h.ZP,{item:!0,xs:12,children:(0,g.jsxs)(w.Z,{component:"fieldset",children:[Y||(Y=(0,g.jsx)(G.Z,{component:"legend",children:"alignItems"})),(0,g.jsxs)(I.Z,{row:!0,name:"alignItems","aria-label":"align items",value:p,onChange:function(n){m(n.target.value)},children:[J||(J=(0,g.jsx)(j.Z,{value:"flex-start",control:(0,g.jsx)(S.Z,{}),label:"flex-start"})),U||(U=(0,g.jsx)(j.Z,{value:"center",control:(0,g.jsx)(S.Z,{}),label:"center"})),X||(X=(0,g.jsx)(j.Z,{value:"flex-end",control:(0,g.jsx)(S.Z,{}),label:"flex-end"})),Q||(Q=(0,g.jsx)(j.Z,{value:"stretch",control:(0,g.jsx)(S.Z,{}),label:"stretch"})),K||(K=(0,g.jsx)(j.Z,{value:"baseline",control:(0,g.jsx)(S.Z,{}),label:"baseline"}))]})]})})]})})}),(0,g.jsx)(h.ZP,{item:!0,xs:12,children:(0,g.jsx)(C.Z,{code:x,language:"jsx"})})]})},"./ComplexGrid.js":function(){return(0,g.jsx)(u.Z,{sx:{p:2,margin:"auto",maxWidth:500,flexGrow:1,backgroundColor:function(n){return"dark"===n.palette.mode?"#1A2027":"#fff"}},children:(0,g.jsxs)(h.ZP,{container:!0,spacing:2,children:[(0,g.jsx)(h.ZP,{item:!0,children:(0,g.jsx)(ln.Z,{sx:{width:128,height:128},children:en||(en=(0,g.jsx)(cn,{alt:"complex",src:"/static/images/grid/complex.jpg"}))})}),(0,g.jsxs)(h.ZP,{item:!0,xs:12,sm:!0,container:!0,children:[(0,g.jsxs)(h.ZP,{item:!0,xs:!0,container:!0,direction:"column",spacing:2,children:[an||(an=(0,g.jsxs)(h.ZP,{item:!0,xs:!0,children:[(0,g.jsx)(rn.Z,{gutterBottom:!0,variant:"subtitle1",component:"div",children:"Standard license"}),(0,g.jsx)(rn.Z,{variant:"body2",gutterBottom:!0,children:"Full resolution 1920x1080 \u2022 JPEG"}),(0,g.jsx)(rn.Z,{variant:"body2",color:"text.secondary",children:"ID: 1030114"})]})),(0,g.jsx)(h.ZP,{item:!0,children:(0,g.jsx)(rn.Z,{sx:{cursor:"pointer"},variant:"body2",children:"Remove"})})]}),tn||(tn=(0,g.jsx)(h.ZP,{item:!0,children:(0,g.jsx)(rn.Z,{variant:"subtitle1",component:"div",children:"$19.00"})}))]})]})})},"./NestedGrid.js":function(){return(0,g.jsx)(m.Z,{sx:{flexGrow:1},children:sn||(sn=(0,g.jsxs)(h.ZP,{container:!0,spacing:1,children:[(0,g.jsx)(h.ZP,{container:!0,item:!0,spacing:3,children:(0,g.jsx)(mn,{})}),(0,g.jsx)(h.ZP,{container:!0,item:!0,spacing:3,children:(0,g.jsx)(mn,{})}),(0,g.jsx)(h.ZP,{container:!0,item:!0,spacing:3,children:(0,g.jsx)(mn,{})})]}))})},"./ColumnsGrid.js":function(){return(0,g.jsx)(m.Z,{sx:{flexGrow:1},children:dn||(dn=(0,g.jsxs)(h.ZP,{container:!0,spacing:2,columns:16,children:[(0,g.jsx)(h.ZP,{item:!0,xs:8,children:(0,g.jsx)(un,{children:"xs=8"})}),(0,g.jsx)(h.ZP,{item:!0,xs:8,children:(0,g.jsx)(un,{children:"xs=8"})})]}))})},"./AutoGridNoWrap.js":function(){return(0,g.jsxs)(m.Z,{sx:{flexGrow:1,overflow:"hidden",px:3},children:[(0,g.jsx)(yn,{sx:{my:1,mx:"auto",p:2},children:hn||(hn=(0,g.jsxs)(h.ZP,{container:!0,wrap:"nowrap",spacing:2,children:[(0,g.jsx)(h.ZP,{item:!0,children:(0,g.jsx)(bn.Z,{children:"W"})}),(0,g.jsx)(h.ZP,{item:!0,xs:!0,zeroMinWidth:!0,children:(0,g.jsx)(rn.Z,{noWrap:!0,children:kn})})]}))}),(0,g.jsx)(yn,{sx:{my:1,mx:"auto",p:2},children:gn||(gn=(0,g.jsxs)(h.ZP,{container:!0,wrap:"nowrap",spacing:2,children:[(0,g.jsx)(h.ZP,{item:!0,children:(0,g.jsx)(bn.Z,{children:"W"})}),(0,g.jsx)(h.ZP,{item:!0,xs:!0,children:(0,g.jsx)(rn.Z,{noWrap:!0,children:kn})})]}))}),(0,g.jsx)(yn,{sx:{my:1,mx:"auto",p:2},children:xn||(xn=(0,g.jsxs)(h.ZP,{container:!0,wrap:"nowrap",spacing:2,children:[(0,g.jsx)(h.ZP,{item:!0,children:(0,g.jsx)(bn.Z,{children:"W"})}),(0,g.jsx)(h.ZP,{item:!0,xs:!0,children:(0,g.jsx)(rn.Z,{children:kn})})]}))})]})},"./CSSGrid.js":function(){return(0,g.jsx)(m.Z,{sx:{width:1},children:fn||(fn=(0,g.jsxs)(m.Z,{display:"grid",gridTemplateColumns:"repeat(12, 1fr)",gap:2,children:[(0,g.jsx)(m.Z,{gridColumn:"span 8",children:(0,g.jsx)(vn,{children:"xs=8"})}),(0,g.jsx)(m.Z,{gridColumn:"span 4",children:(0,g.jsx)(vn,{children:"xs=4"})}),(0,g.jsx)(m.Z,{gridColumn:"span 4",children:(0,g.jsx)(vn,{children:"xs=4"})}),(0,g.jsx)(m.Z,{gridColumn:"span 8",children:(0,g.jsx)(vn,{children:"xs=8"})})]}))})}};function In(){return Gn||(Gn=(0,g.jsx)(c.Z,{demos:jn,docs:wn,demoComponents:Cn}))}},348253:function(n,e,a){"use strict";a.d(e,{Z:function(){return y}});var t=a(481936),o=a(25778),i=a(295649),s=a(827378),r=a(138944),l=a(47918),c=a(290763),d=a(906205),p=a(403503),m=a(824246),u=(0,p.Z)((0,m.jsx)("path",{d:"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"}),"Person"),h=a(288125),g=["alt","children","className","component","imgProps","sizes","src","srcSet","variant"],x=(0,c.ZP)("div",{name:"MuiAvatar",slot:"Root",overridesResolver:function(n,e){var a=n.ownerState;return[e.root,e[a.variant],a.colorDefault&&e.colorDefault]}})((function(n){var e=n.theme,a=n.ownerState;return(0,i.Z)((0,i.Z)((0,i.Z)({position:"relative",display:"flex",alignItems:"center",justifyContent:"center",flexShrink:0,width:40,height:40,fontFamily:e.typography.fontFamily,fontSize:e.typography.pxToRem(20),lineHeight:1,borderRadius:"50%",overflow:"hidden",userSelect:"none"},"rounded"===a.variant&&{borderRadius:e.shape.borderRadius}),"square"===a.variant&&{borderRadius:0}),a.colorDefault&&{color:e.palette.background.default,backgroundColor:"light"===e.palette.mode?e.palette.grey[400]:e.palette.grey[600]})})),f=(0,c.ZP)("img",{name:"MuiAvatar",slot:"Img",overridesResolver:function(n,e){return e.img}})({width:"100%",height:"100%",textAlign:"center",objectFit:"cover",color:"transparent",textIndent:1e4}),b=(0,c.ZP)(u,{name:"MuiAvatar",slot:"Fallback",overridesResolver:function(n,e){return e.fallback}})({width:"75%",height:"75%"});var y=s.forwardRef((function(n,e){var a=(0,d.Z)({props:n,name:"MuiAvatar"}),c=a.alt,p=a.children,u=a.className,y=a.component,k=void 0===y?"div":y,v=a.imgProps,G=a.sizes,w=a.src,j=a.srcSet,C=a.variant,I=void 0===C?"circular":C,S=(0,t.Z)(a,g),P=null,Z=function(n){var e=n.crossOrigin,a=n.referrerPolicy,t=n.src,i=n.srcSet,r=s.useState(!1),l=(0,o.Z)(r,2),c=l[0],d=l[1];return s.useEffect((function(){if(t||i){d(!1);var n=!0,o=new Image;return o.onload=function(){n&&d("loaded")},o.onerror=function(){n&&d("error")},o.crossOrigin=e,o.referrerPolicy=a,o.src=t,i&&(o.srcset=i),function(){n=!1}}}),[e,a,t,i]),c}((0,i.Z)((0,i.Z)({},v),{},{src:w,srcSet:j})),R=w||j,A=R&&"error"!==Z,B=(0,i.Z)((0,i.Z)({},a),{},{colorDefault:!A,component:k,variant:I}),F=function(n){var e=n.classes,a={root:["root",n.variant,n.colorDefault&&"colorDefault"],img:["img"],fallback:["fallback"]};return(0,l.Z)(a,h.$,e)}(B);return P=A?(0,m.jsx)(f,(0,i.Z)({alt:c,src:w,srcSet:j,sizes:G,ownerState:B,className:F.img},v)):null!=p?p:R&&c?c[0]:(0,m.jsx)(b,{className:F.fallback}),(0,m.jsx)(x,(0,i.Z)((0,i.Z)({as:k,ownerState:B,className:(0,r.default)(F.root,u),ref:e},S),{},{children:P}))}))},288125:function(n,e,a){"use strict";a.d(e,{$:function(){return o}});var t=a(892992);function o(n){return(0,t.Z)("MuiAvatar",n)}var i=(0,a(84408).Z)("MuiAvatar",["root","colorDefault","circular","rounded","square","img","fallback"]);e.Z=i},676269:function(n,e,a){(window.__NEXT_P=window.__NEXT_P||[]).push(["/material-ui/react-grid",function(){return a(139460)}])}},function(n){n.O(0,[64631,31194,72773,31659,16950,37141,91895,63463,61980,45387,892,2798,30170,20365,60630,25747,84041,26035,37218,67414,90478,30016,94616,75236,49774,92888,40179],(function(){return e=676269,n(n.s=e);var e}));var e=n.O();_N_E=e}]);